"use strict";(self.webpackChunkmydocusaurus=self.webpackChunkmydocusaurus||[]).push([[7143],{71124:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"articleDoc/companyDoc/\u56fd\u6807\u70b9\u64ad\u6d41\u7a0b/\u56fd\u6807\u70b9\u64ad\u6d41\u7a0b","title":"\u56fd\u6807\u70b9\u64ad\u6d41\u7a0b","description":"image-20250414170450371","source":"@site/docs/articleDoc/companyDoc/\u56fd\u6807\u70b9\u64ad\u6d41\u7a0b/\u56fd\u6807\u70b9\u64ad\u6d41\u7a0b.md","sourceDirName":"articleDoc/companyDoc/\u56fd\u6807\u70b9\u64ad\u6d41\u7a0b","slug":"/articleDoc/companyDoc/\u56fd\u6807\u70b9\u64ad\u6d41\u7a0b/","permalink":"/docs/articleDoc/companyDoc/\u56fd\u6807\u70b9\u64ad\u6d41\u7a0b/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"\u56fd\u6807\u70b9\u64ad\u6d41\u7a0b"},"sidebar":"articleDoc","previous":{"title":"\u53ef\u89c6\u5316\u89c6\u9891\u8c03\u5ea6\u6307\u6325\u5e73\u53f0 \u6d41\u7a0b\u4e0e\u539f\u7406-\u7b14\u8bb0","permalink":"/docs/articleDoc/companyDoc/\u53ef\u89c6\u5316\u89c6\u9891\u8c03\u5ea6\u6307\u6325\u5e73\u53f0 \u6d41\u7a0b\u4e0e\u539f\u7406-\u7b14\u8bb0"},"next":{"title":"\u5b9e\u65f6\u97f3\u89c6\u9891\u6280\u672f\u5b66\u4e60\u6587\u6863","permalink":"/docs/articleDoc/companyDoc/\u5b9e\u65f6\u97f3\u89c6\u9891\u6280\u672f\u5b66\u4e60\u6587\u6863"}}');var a=r(74848),s=r(28453);const i={title:"\u56fd\u6807\u70b9\u64ad\u6d41\u7a0b"},c="\u4e00\u3001\u7cfb\u7edf\u67b6\u6784",o={},l=[{value:"1.\u524d\u7aef(web)\u5411\u540e\u7aef\u53d1\u8d77\u8bf7\u6c42",id:"1\u524d\u7aefweb\u5411\u540e\u7aef\u53d1\u8d77\u8bf7\u6c42",level:2},{value:"2.\u540e\u7aef(SIP\u4fe1\u4ee4\u670d\u52a1\u5668)\uff1a\u5904\u7406\u8bf7\u6c42",id:"2\u540e\u7aefsip\u4fe1\u4ee4\u670d\u52a1\u5668\u5904\u7406\u8bf7\u6c42",level:2},{value:"(1)  \u9996\u5148\uff0c<code>\u6dfb\u52a0\u901a\u4fe1\u8bb0\u5f55</code>,\u5e95\u5c42\u4f1a\u4eceJWT\u67e5\u8be2User(<code>gb_user</code>)\u548c\u8bbe\u5907Device(<code>wvp_device</code>)\u4fe1\u606f\uff0c\u7136\u540e\u6dfb\u52a0\u5230\u901a\u4fe1\u8bb0\u5f55\u8868\u4e2d<code>sys_communication_record</code>",id:"1--\u9996\u5148\u6dfb\u52a0\u901a\u4fe1\u8bb0\u5f55\u5e95\u5c42\u4f1a\u4ecejwt\u67e5\u8be2usergb_user\u548c\u8bbe\u5907devicewvp_device\u4fe1\u606f\u7136\u540e\u6dfb\u52a0\u5230\u901a\u4fe1\u8bb0\u5f55\u8868\u4e2dsys_communication_record",level:3},{value:"(2)  \u5176\u6b21\uff0c\u83b7\u53d6\u4e00\u4e2azlm\u591a\u5a92\u4f53\u670d\u52a1\u5668.<code>src/main/java/com/gbcom/wvp/vmp/vmanager/gb28181/play/PlayController.java</code>",id:"2--\u5176\u6b21\u83b7\u53d6\u4e00\u4e2azlm\u591a\u5a92\u4f53\u670d\u52a1\u5668srcmainjavacomgbcomwvpvmpvmanagergb28181playplaycontrollerjava",level:3},{value:"(3) \u7d27\u63a5\u7740\uff0c\u8bbe\u7f6e\u597d\u8d85\u65f6\u7684\u51fd\u6570\u548c\u672a\u8d85\u65f6\u7684\u5904\u7406\u51fd\u6570\uff0c\u8c03\u7528<code>playService.play()</code>",id:"3-\u7d27\u63a5\u7740\u8bbe\u7f6e\u597d\u8d85\u65f6\u7684\u51fd\u6570\u548c\u672a\u8d85\u65f6\u7684\u5904\u7406\u51fd\u6570\u8c03\u7528playserviceplay",level:3},{value:"(4)  \u8fdb\u4e00\u6b65\u8c03\u7528\u5e95\u5c42\u7684<code>src/main/java/com/gbcom/wvp/vmp/service/impl/PlayServiceImpl.java</code>\u4e2d\u7684play\u65b9\u6cd5\uff0c\u5f00\u542fopenRTPServer \uff0c\u62ff\u5230SSRCInfo",id:"4--\u8fdb\u4e00\u6b65\u8c03\u7528\u5e95\u5c42\u7684srcmainjavacomgbcomwvpvmpserviceimplplayserviceimpljava\u4e2d\u7684play\u65b9\u6cd5\u5f00\u542fopenrtpserver-\u62ff\u5230ssrcinfo",level:3},{value:"(5) \u518d\u56de\u5230<code>src/main/java/com/gbcom/wvp/vmp/media/zlm/ZLMServerFactory.java</code>,\u8fd9\u4e2a\u65f6\u5019\u5df2\u7ecf\u786e\u8ba4\u4e86<code>rtp server</code>\u662f\u5b58\u5728\u5e76\u4e14\u662f\u53ef\u4ee5\u6b63\u5e38\u8c03\u7528\u7684\u4e86\uff0c\u7d27\u63a5\u7740\u5c31\u53bb\u6267\u884c\u8c03\u7528\u8fd9\u4e2aRTP\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\u7684\u903b\u8f91\uff0c\u5e95\u5c42\u4e5f\u662f\u8c03\u7528<code>sendPost</code>\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u8fc7\u7a0b\u4e2d\u5982\u679c\u51fa\u73b0\u5f02\u5e38\uff0c\u5c31\u62a5\u9519\uff0c\u6216\u8005\u91cd\u542fRtpSever",id:"5-\u518d\u56de\u5230srcmainjavacomgbcomwvpvmpmediazlmzlmserverfactoryjava\u8fd9\u4e2a\u65f6\u5019\u5df2\u7ecf\u786e\u8ba4\u4e86rtp-server\u662f\u5b58\u5728\u5e76\u4e14\u662f\u53ef\u4ee5\u6b63\u5e38\u8c03\u7528\u7684\u4e86\u7d27\u63a5\u7740\u5c31\u53bb\u6267\u884c\u8c03\u7528\u8fd9\u4e2artp\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\u7684\u903b\u8f91\u5e95\u5c42\u4e5f\u662f\u8c03\u7528sendpost\u8fd9\u4e2a\u65b9\u6cd5\u8fc7\u7a0b\u4e2d\u5982\u679c\u51fa\u73b0\u5f02\u5e38\u5c31\u62a5\u9519\u6216\u8005\u91cd\u542frtpsever",level:3},{value:"(6)  \u518d\u56de\u5230<code>src/main/java/com/gbcom/wvp/vmp/service/impl/PlayServiceImpl.java</code>",id:"6--\u518d\u56de\u5230srcmainjavacomgbcomwvpvmpserviceimplplayserviceimpljava",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"\u4e00\u7cfb\u7edf\u67b6\u6784",children:"\u4e00\u3001\u7cfb\u7edf\u67b6\u6784"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image-20250414170450371",src:r(87444).A+"",width:"736",height:"499"})}),"\n",(0,a.jsx)(n.h1,{id:"\u4e8c\u56fd\u6807\u70b9\u64ad\u4e1a\u52a1",children:"\u4e8c\u3001\u56fd\u6807\u70b9\u64ad\u4e1a\u52a1"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\u5165\u53e3"}),"\uff1a\u9996\u9875\u89c6\u9891\u70b9\u64ad\u70b9\u51fb\u5e26\u6709\u89c6\u9891\u7684\u8bbe\u5907"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\u5907\u6ce8"}),"\uff1aGB\u56fd\u6807\u53ef\u4ee5\u4f5c\u4e3a\u89c6\u9891\u8bbe\u5907\u5355\u72ec\u5b58\u5728\uff0c\u4e5f\u53ef\u4ee5\u7ed1\u5b9a\u5728\u5355\u5175\u8bbe\u5907\u4e0a"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image-20250414170603336",src:r(60473).A+"",width:"1720",height:"834"})}),"\n",(0,a.jsx)(n.h1,{id:"\u4e09\u6d41\u7a0b\u56fe",children:"\u4e09\u3001\u6d41\u7a0b\u56fe"}),"\n",(0,a.jsx)(n.h2,{id:"1\u524d\u7aefweb\u5411\u540e\u7aef\u53d1\u8d77\u8bf7\u6c42",children:"1.\u524d\u7aef(web)\u5411\u540e\u7aef\u53d1\u8d77\u8bf7\u6c42"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"<a-tree>"})," \u662f Ant Design Vue \u63d0\u4f9b\u7684\u6811\u5f62\u7ec4\u4ef6\uff0c\u4e5f\u662f\u672c\u9879\u76ee\u6240\u4f7f\u7528\u7684\uff0c\u7ed1\u5b9a\u4e86\u70b9\u51fb\u4e8b\u4ef6",(0,a.jsx)(n.code,{children:'@select="onClickDevice"'})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/layout/sider-tree/index.vue"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'<template>\n    <div id="treeDiv"  class="tree" style="margin-left: 4px;">\n        <a-spin class="loading" :spinning="spinning" style="height:100vh;position: relative; left: 40%;margin-top: 20px;" />\n        <a-tree class="m-tree" v-if="!showTree" :selectable="true" :tree-data="treeData" :replace-fields="replaceFields"\n          :expandedKeys="expandedKeys" :selectedKeys="selectedKeys" :auto-expand-parent="autoExpandParent"\n          @expand="onExpand" @select="onClickDevice" @rightClick="rightClick" :show-icon="true" :class="\'treeClass\'"\n          color="rgba(255, 255, 255, 0.65)">\n          .......\n        </a-tree>\n    </div>\n</template>\n'})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:'@select="onClickDevice"'}),"\u65b9\u6cd5\u4e3b\u8981\u5199\u5728\u4e86",(0,a.jsx)(n.code,{children:"script"}),"\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/layout/sider-tree/index.vue"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"<script>\n    .....\n    const onClickDevice = (item, e) => {\n      storage.remove('device')\n      selectedKeys.value = []\n      let routerUrl :any = router.currentRoute.value.name\n      state.routerUrl = router.currentRoute.value.path\n      if (e.selected) {\n        expandedKeys.value.push(item[0])\n        findTreeNode(item[0])\n        expandedKeys.value = expandedKeys.value.filter((item, i, self) => item && self.indexOf(item) === i);\n        autoExpandParent.value = false;\n        const selectedNode =  e.selectedNodes[0].props.dataRef\n    \n        if (selectedNode.level == 0 || (selectedNode.isFromPlatformCatalog && selectedNode.children.length > 0)) return\n        if (state.userName != 'admin' && (selectedNode.parentId == '9' || selectedNode.id == '9')) {\n          //\u53ea\u6709\u7528\u6237admin \u8d26\u53f7\u624d\u80fd\u67e5\u770b\u672a\u5206\u914d\u6570\u636e\n          message.warn('\u672a\u5206\u914d\u8bbe\u5907\u4e0d\u5141\u8bb8\u67e5\u770b')\n          return;\n        }\n    \n        if (selectedNode.isDevice == '0') {\n          if (routerUrl == \"/wvp/device\") {\n            bus.emit('sendData', { selectedNodes: selectedNode })\n          } else if (selectedNode.type == 'mesh' && ['/gis/leaflet','/gis/amap','/topo/router','/topo/neighbor','/wvp/meshDevice/config','/wvp/meshDevice/upgrade'].includes(routerUrl)) {\n            meshDevId = selectedNode.idv\n            const leafDevice: any = findLeafDevice(meshDevId, [])[0]\n            selectedKeys.value = []\n            selectedKeys.value.push(leafDevice.idv)\n            lastSelect = leafDevice\n            storage.set('selectData', leafDevice, 60 * 60 * 1000)\n            bus.emit('sendData', { selectedNodes: leafDevice, device: meshDevId });\n            currentSelectedNodes(lastSelect);\n            return;\n          }\n        } else {\n          lastSelect = selectedNode\n          selectedKeys.value.push(lastSelect.dataId)\n          currentSelectedNodes(lastSelect);\n          handleClick(lastSelect,e,routerUrl)\n        }\n      } else {\n        if (lastSelect != null) {\n          handleClick(lastSelect,e,routerUrl)\n        }\n      }\n    }\n    .....\n<\/script>\n"})}),"\n",(0,a.jsx)(n.mermaid,{value:"flowchart TD\n    A[\u5f00\u59cb] --\x3e B{\u662f\u5426\u9009\u4e2d\u8282\u70b9}\n    B --\x3e|Yes| C[\u6e05\u9664\u5b58\u50a8\u548c\u9009\u4e2d\u72b6\u6001]\n    C --\x3e D{\u5f53\u524d\u8def\u7531\u548c\u8282\u70b9\u7c7b\u578b}\n    D --\x3e|\u8bbe\u5907\u7c7b\u578b| E{\u7528\u6237\u662f\u5426\u4e3aadmin}\n    E --\x3e|No| F[\u63d0\u793a\u6743\u9650\u4e0d\u8db3]\n    D --\x3e|\u975e\u8bbe\u5907\u7c7b\u578b| G[\u66f4\u65b0\u9009\u4e2d\u72b6\u6001\u5e76\u8c03\u7528handleClick]\n    D --\x3e|\u7279\u5b9a\u8bbe\u5907\u7c7b\u578b| H[\u67e5\u627e\u5b50\u8bbe\u5907\u5e76\u66f4\u65b0\u72b6\u6001]\n    H --\x3e I[\u89e6\u53d1\u4e8b\u4ef6\u5e76\u4fdd\u5b58\u6570\u636e]\n    B --\x3e|No| J[\u8c03\u7528handleClick\u5904\u7406\u4e0a\u6b21\u9009\u4e2d\u8282\u70b9]\n    J --\x3e K[\u7ed3\u675f]\n    G --\x3e K[\u7ed3\u675f]\n    I --\x3e K[\u7ed3\u675f]\n    F --\x3e K[\u7ed3\u675f]"}),"\n",(0,a.jsxs)(n.p,{children:["\u6839\u636e\u6d41\u7a0b\uff0c\u5982\u679c\u987a\u5229\u5728\u9996\u9875\uff08\u8def\u7531\u662f/wvp/live\uff09\uff0c\u5e76\u4e14\u8282\u70b9\u662f\u4e00\u4e2a\u8bbe\u5907\uff0c\u6700\u7ec8\u8c03\u7528",(0,a.jsx)(n.code,{children:"handleClick"}),"\u65b9\u6cd5"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/layout/sider-tree/index.vue"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const handleClick =(device,e,routerUrl)=>{\n  switch (device.type){\n    case 'mesh':\n      handleClickForMesh(device,routerUrl)\n      break;\n    case 'GB':\n      handleClickForOther(device,routerUrl)\n      break;\n    case 'web':\n      handleClickForWeb(device,routerUrl,e)\n      break;\n    case 'meshT':\n      handleClickForOther(device,routerUrl)\n      break;\n    case 'android':\n      handleClickForOther(device,routerUrl)\n      break;\n    case 'narrowband':\n      handleClickForNarrowband(device,routerUrl)\n      break;\n    default:\n      break;\n  }\n\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["\u7ee7\u7eed\u8c03\u7528",(0,a.jsx)(n.code,{children:"handleClickForOther "}),"\u65b9\u6cd5"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// \u5904\u7406meshT/GB/android\u7684\u70b9\u51fb\u4e8b\u4ef6\nconst handleClickForOther =(device,routerUrl)=>{\n  if(['/wvp/live','/gis/leaflet','/gis/amap'].includes(routerUrl)){\n    bus.emit('clickTree', device)\n  }else if(routerUrl == '/wvp/device' || routerUrl == '/wvp/record'){//\u8bbe\u5907\u5217\u8868&\u5f55\u50cf\u9875\u9762\n    bus.emit('sendData', {selectedNodes: device})\n  }else {\n    message.warn('\u4e0d\u652f\u6301\u6b64\u8bbe\u5907')\n    bus.emit('noSupport')\n  }\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["\u6700\u7ec8\u8c03\u7528",(0,a.jsx)(n.code,{children:"clickTree"}),"\u65b9\u6cd5\uff0c\u5176\u4e2d\uff0cbus.emit \u662f\u4e00\u79cd\u57fa\u4e8e\u4e8b\u4ef6\u603b\u7ebf\uff08Event Bus\uff09\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u901a\u5e38\u7528\u4e8e\u5728 Vue \u7ec4\u4ef6\u4e4b\u95f4\u8fdb\u884c\u89e3\u8026\u901a\u4fe1\u3002\u5b83\u5141\u8bb8\u7ec4\u4ef6\u901a\u8fc7\u4e8b\u4ef6\u540d\u79f0\u89e6\u53d1\u4e8b\u4ef6\uff0c\u5e76\u4f20\u9012\u76f8\u5173\u6570\u636e\u3002\u5173\u4e8ebus.emit \u7684\u5199\u6cd5\uff1a\u5728\u4ee3\u7801\u4e2d\uff0cbus.emit('clickTree', device) \u7684\u542b\u4e49\u662f\uff1a\u4e8b\u4ef6\u540d\u79f0\uff1a'clickTree' \u662f\u4e8b\u4ef6\u7684\u6807\u8bc6\u7b26\u3002\u53c2\u6570\uff1adevice \u662f\u4f20\u9012\u7ed9\u8ba2\u9605\u8005\u7684\u6570\u636e\u3002\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0cbus \u901a\u5e38\u662f\u4e00\u4e2a\u5168\u5c40\u4e8b\u4ef6\u603b\u7ebf\u5bf9\u8c61\uff0c\u57fa\u4e8e Vue \u5b9e\u4f8b\u521b\u5efa\uff0c\u672c\u9879\u76ee\u4e2d\u4e3a",(0,a.jsx)(n.code,{children:"src/lib/eventbus/bus.ts"})]}),"\n",(0,a.jsx)(n.p,{children:"\u76ee\u524d\u6709\u516d\u4e2a\u5730\u65b9\u5bf9\u8be5\u4e8b\u4ef6\u8fdb\u884c\u4e86\u76d1\u542c"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"//src/views/auth/system/audio/index.vue\n//src/views/auth/system/live/index.vue\n//src/views/auth/system/onlineMap/index.vue\n//src/views/auth/system/leafletMap/index.vue\n//src/components/a-offline-map/a-offline-map.vue\n//src/components/a-android-off-map/a-android-off-map.vue\n<script>\n    ...\n    bus.on('clickTree', clickTree);\n    onUnmounted(()=>{\n        bus.off('clickTree',clickTree)\n    })\n    ...\n<\/script>\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:'\n//audio\nconst clickTree=(item)=>{\n  console.log(123)\n  //\u6839\u636eitem.id \u548c isNarrowband  \u627e\u5230\u5bf9\u5e94\u7684\u8bbe\u5907\u7ec4 \u5e76\u663e\u793a\u9009\u62e9\u72b6\u6001\n  let index = 0\n  if(item.isNarrowband){\n    index = deviceGroups.value.findIndex(group => group.deviceId === item.parentId)\n  }else{\n    index = deviceGroups.value.findIndex(group => group.deviceId === item.id)\n  }\n  //\u62ff\u5230\u4e0b\u6807\n  selectCard(index)\n}\n\n//live\n//\u70b9\u51fb\u4e8b\u4ef6\nconst clickTree =(item)=>{\n  debugger\n  if(clickTreeItem && clickTreeItem==item){\n    return;\n  }\n  clickTreeItem=item\n  //\u4e92\u62c6\u64cd\u4f5c\n  for (let j = 0; j <state.itemObject.length ; j++) {\n    if(state.itemObject[j] && item.idv == state.itemObject[j].idv){\n      playerIdx.value=j\n      selectDiv(j+1)\n      message.warn(\'\u8be5\u8d44\u6e90\u6b63\u5728\u64ad\u653e!\');\n      clickTreeItem=null\n      return\n    }\n    //\u5224\u65ad\u5f53\u524d\u9009\u62e9\u4e2d\u7684\u6846\u662f\u5426\u5728\u64ad\u653e\uff0c\u518d\u64ad\u653e\u5c31\u81ea\u52a8\u9009\u4e0b\u4e00\u4e2a\u7a7a\u7684\u683c\u5b50\n    if(!isBlank(state.itemObject[playerIdx.value])){\n      const indexLists = getEmptyIndex(state.itemObject)\n      if(indexLists.length!=0){\n        playerIdx.value = indexLists[0]\n      }\n    }\n  }\n  if(item.type && (item.type == \'web\' || item.type == \'mesh\')){\n    clickTreeItem=null\n    return;\n  }\n  playVideo(item,playerIdx.value)\n}\n\n//onlineMap\n//\u70b9\u51fb\u4e8b\u4ef6\nconst clickTree =(item)=>{\n  debugger\n  if(Date.now() - lastClickTreeTime < 1680\n      //clickTreeItem && clickTreeItem==item\n  ){\n    return;\n  }\n  lastClickTreeTime = Date.now();\n  clickTreeItem=item\n  //\u6839\u636e\u70b9\u51fb\u7684\u7c7b\u578b\u5224\u65ad\n  if(item.type==\'android\'){\n    initAndroidMemberLnglatDataMap()\n    const androidMemberLnglatData = androidMemberLnglatDataMap.get(item.id);\n    if(androidMemberLnglatData == null) {\n      message.info("\u6682\u65e0\u6b64\u8bbe\u5907\u8fd1\u671f\u5b9a\u4f4d\u4fe1\u606f")\n    }else{\n      selectDevice(androidMemberLnglatData.longitudeLatitude,androidMemberLnglatData.member.id,androidMemberLnglatData.member.online)\n    }\n  }else if(item.type==\'narrowband\'){\n    debugger\n    const element: any = getMeshNarrowbandDevice(item.id,item.type)\n    if(isBlank(element.longitudeLatitude)) {\n      message.info("\u6682\u65e0\u6b64\u8bbe\u5907\u8fd1\u671f\u5b9a\u4f4d\u4fe1\u606f")\n    }else{\n      selectDevice(element.longitudeLatitude,element.meshNarrowband.deviceId,element.meshNarrowband.onLine)\n    }\n  }else{\n    message.info("\u6682\u65e0\u6b64\u8bbe\u5907\u8fd1\u671f\u5b9a\u4f4d\u4fe1\u606f")\n  }\n\n\n  //\u4e92\u62c6\u64cd\u4f5c\n  //playVideo(item,playerIdx.value)\n}\n\n//leafletMap\nconst clickTree =(item)=> {\n  debugger\n  if (Date.now() - lastClickTreeTime < 1680\n      //clickTreeItem && clickTreeItem==item\n  ) {\n    return;\n  }\n  lastClickTreeTime = Date.now();\n  clickTreeItem = item\n  if (item.type == "android") {\n    const androidMemberLnglatData = androidMemberLnglatDataMap.get(item.id);\n    if (androidMemberLnglatData == null) {\n      message.info("\u6682\u65e0\u6b64\u8bbe\u5907\u8fd1\u671f\u5b9a\u4f4d\u4fe1\u606f")\n    } else {\n      selectAndroidDevice(androidMemberLnglatData.longitudeLatitude, item.id)\n    }\n  }else if(item.type == "narrowband"){\n    const element= narrowbandMemberLnglatDataMap.get(item.id)\n    if(isBlank(element.longitudeLatitude)){\n      message.info("\u6682\u65e0\u6b64\u8bbe\u5907\u8fd1\u671f\u5b9a\u4f4d\u4fe1\u606f")\n    }else{\n      selectAndroidDevice(element.longitudeLatitude, item.id)\n    }\n  }else{\n    message.info("\u6682\u65e0\u6b64\u8bbe\u5907\u8fd1\u671f\u5b9a\u4f4d\u4fe1\u606f")\n  }\n  //\u4e92\u62c6\u64cd\u4f5c\n  //playVideo(item,playerIdx.value)\n}\n\n//a-offline-map\nconst clickTree =(item)=>{\n  if(Date.now() - lastClickTreeTime < 1680\n      //clickTreeItem && clickTreeItem==item\n  ){\n    return;\n  }\n  lastClickTreeTime = Date.now();\n  clickTreeItem=item\n  const androidMemberLnglatData = androidMemberLnglatDataMap.get(item.id);\n  if(androidMemberLnglatData == null) {\n    message.info("\u6682\u65e0\u6b64\u8bbe\u5907\u8fd1\u671f\u5b9a\u4f4d\u4fe1\u606f")\n  }else{\n    selectAndroidDevice(androidMemberLnglatData.longitudeLatitude,item.id)\n  }\n  //\u4e92\u62c6\u64cd\u4f5c\n  //playVideo(item,playerIdx.value)\n}\n\n//a-android-off-map\nconst clickTree =(item)=>{\n  if(Date.now() - lastClickTreeTime < 1680\n      //clickTreeItem && clickTreeItem==item\n  ){\n    return;\n  }\n  lastClickTreeTime = Date.now();\n  clickTreeItem=item\n  const androidMemberLnglatData = androidMemberLnglatDataMap.get(item.id);\n  if(androidMemberLnglatData == null) {\n    message.info("\u6682\u65e0\u6b64\u8bbe\u5907\u8fd1\u671f\u5b9a\u4f4d\u4fe1\u606f")\n  }else{\n    selectAndroidDevice(androidMemberLnglatData.longitudeLatitude,item.id)\n  }\n  //\u4e92\u62c6\u64cd\u4f5c\n  //playVideo(item,playerIdx.value)\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8fd9\u516d\u4e2a clickTree \u65b9\u6cd5\u90fd\u4f1a\u6267\u884c\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u901a\u8fc7 bus.on('clickTree', clickTree) \u6ce8\u518c\u5230\u4e86\u540c\u4e00\u4e2a\u4e8b\u4ef6 'clickTree' \u4e0a\u3002\u8fd9\u610f\u5473\u7740\u5f53 'clickTree' \u4e8b\u4ef6\u88ab\u89e6\u53d1\u65f6\uff0c\u6240\u6709\u6ce8\u518c\u7684\u76d1\u542c\u5668\uff08\u5373\u8fd9\u516d\u4e2a\u65b9\u6cd5\uff09\u90fd\u4f1a\u88ab\u8c03\u7528\u3002"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Q & A \u4e3a\u4ec0\u4e48\u8fd9\u516d\u4e2a\u90fd\u4f1a\u6267\u884c\uff1f"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"\u4e8b\u4ef6\u603b\u7ebf\u673a\u5236\uff1a\nbus.on \u662f\u4e00\u4e2a\u5178\u578b\u7684\u4e8b\u4ef6\u603b\u7ebf\u6a21\u5f0f\uff0c\u5141\u8bb8\u591a\u4e2a\u76d1\u542c\u5668\u7ed1\u5b9a\u5230\u540c\u4e00\u4e2a\u4e8b\u4ef6\u3002\n\u5f53 bus.emit('clickTree', item) \u88ab\u8c03\u7528\u65f6\uff0c\u6240\u6709\u901a\u8fc7 bus.on('clickTree', ...) \u6ce8\u518c\u7684\u56de\u8c03\u51fd\u6570\u90fd\u4f1a\u4f9d\u6b21\u6267\u884c\u3002\n\n\u4ee3\u7801\u4e0a\u4e0b\u6587\uff1a\n\u6bcf\u4e2a\u6587\u4ef6\u4e2d\u7684 clickTree \u65b9\u6cd5\u903b\u8f91\u4e0d\u540c\uff0c\u4f46\u5b83\u4eec\u90fd\u88ab\u8bbe\u8ba1\u4e3a\u54cd\u5e94 'clickTree' \u4e8b\u4ef6\u3002\n\u8fd9\u4e9b\u65b9\u6cd5\u5728\u5404\u81ea\u7684\u6a21\u5757\u4e2d\u5904\u7406\u4e0d\u540c\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u4f8b\u5982\u64ad\u653e\u89c6\u9891\u3001\u9009\u62e9\u8bbe\u5907\u3001\u663e\u793a\u5730\u56fe\u4f4d\u7f6e\u7b49\u3002\n\n\u6f5c\u5728\u95ee\u9898\uff1a\n\u5982\u679c\u591a\u4e2a clickTree \u65b9\u6cd5\u540c\u65f6\u6267\u884c\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6027\u80fd\u95ee\u9898\u6216\u903b\u8f91\u51b2\u7a81\u3002\n\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u53ef\u80fd\u53ea\u9700\u8981\u7279\u5b9a\u6a21\u5757\u7684 clickTree \u6267\u884c\uff0c\u800c\u4e0d\u662f\u5168\u90e8\u3002\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u56e0\u4e3a\u6211\u4eec\u662f\u70b9\u64ad\u7684\u6d41\u7a0b\uff0c\u6211\u4eec\u4e3b\u8981\u6765\u770b\u770b\u8fd9\u4e2a\u64ad\u653e\u89c6\u9891\u7684\u6d41\u7a0b"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/views/auth/system/live/index.vue"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:'//\u603b\u7ebf\u76d1\u542c\u5230\uff0c\u6267\u884cclickTree----------------------------------------------------------------\nconst clickTree =(item)=>{\n  debugger\n  if(clickTreeItem && clickTreeItem==item){\n    return;\n  }\n  clickTreeItem=item\n  //\u4e92\u62c6\u64cd\u4f5c\n  for (let j = 0; j <state.itemObject.length ; j++) {\n    if(state.itemObject[j] && item.idv == state.itemObject[j].idv){\n      playerIdx.value=j\n      selectDiv(j+1)\n      message.warn(\'\u8be5\u8d44\u6e90\u6b63\u5728\u64ad\u653e!\');\n      clickTreeItem=null\n      return\n    }\n    //\u5224\u65ad\u5f53\u524d\u9009\u62e9\u4e2d\u7684\u6846\u662f\u5426\u5728\u64ad\u653e\uff0c\u518d\u64ad\u653e\u5c31\u81ea\u52a8\u9009\u4e0b\u4e00\u4e2a\u7a7a\u7684\u683c\u5b50\n    if(!isBlank(state.itemObject[playerIdx.value])){\n      const indexLists = getEmptyIndex(state.itemObject)\n      if(indexLists.length!=0){\n        playerIdx.value = indexLists[0]\n      }\n    }\n  }\n  if(item.type && (item.type == \'web\' || item.type == \'mesh\')){\n    clickTreeItem=null\n    return;\n  }\n  playVideo(item,playerIdx.value)\n}\n\n//\u8fdb\u4e00\u6b65\u6267\u884cplayVideo\u65b9\u6cd5----------------------------------------------------------------\nconst playVideo=(item,i)=>{\n  if(!item.online){\n    clickTreeItem = null\n    message.error(\'\u8bbe\u5907\u79bb\u7ebf!\');\n    return\n  }\n  selectDiv(i+1)\n  //\u5148\u5173\u95ed\n  if(isNotBlank(state.jessibuca[i]) || state.itemObject[i]){\n    destroy(i+1)\n    setTimeout(()=>{\n      if(isNotBlank(item.type)&& item.type == \'narrowband\'){\n        if(isCallNarrowband){\n          message.warn("\u6b63\u5728\u547c\u53eb\u8bbe\u5907,\u7ebf\u8def\u5360\u7528\u3002\u3002")\n          return\n        }\n        handlePlayVideoForNarrowband(item,i)\n      }else{\n        handlePlayVideo(item,i)\n      }\n    },618)\n  }else {\n    if(isNotBlank(item.type)&& item.type == \'narrowband\'){\n      if(isCallNarrowband){\n        message.warn("\u6b63\u5728\u547c\u53eb\u8bbe\u5907,\u7ebf\u8def\u5360\u7528\u3002\u3002")\n        return\n      }\n      handlePlayVideoForNarrowband(item,i)\n    }else{\n      handlePlayVideo(item,i)\n    }\n  }\n}\n\n//\u8fdb\u4e00\u6b65\u6267\u884chandlePlayVideo ----------------------------------------------------------------\nconst handlePlayVideo =(item,i)=>{\n  //\u663e\u793a\u52a0\u8f7d\u56fe\u6807\n  showSpin.value[i] = "loading"\n  //\u9690\u85cf\u6570\u5b57\n  state.showNum[i] ="hide"\n  //\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u4e91\u53f0\u63a7\u5236\n  item.isControl?state.showPtx[i] = true:state.showPtx[i] = false\n  //\u6bcf\u6b21\u90fd\u662f\u521d\u59cb\u5316\u4e00\u4e0b\u4e91\u53f0\u663e\u793a\u9690\u85cf\n  state.showControl[i]= false\n\n  //\u5224\u65ad\u8bbe\u5907\u7c7b\u578b\n  if(item.type && (item.type == \'android\' || item.type == \'meshT\')){\n    if(item.mettingStatus || (item.playStatus && item.bePlayStatus)){\n      message.info(item.mettingStatus?\'\u8bbe\u5907\u6b63\u5728\u4f1a\u8bae\u4e2d\uff0c\u8bf7\u7a0d\u540e\':\'\u8bbe\u5907\u6b63\u5728\u901a\u8bdd\u4e2d\uff0c\u8bf7\u7a0d\u540e\')\n      clickTreeItem = null\n      showSpin.value[i] = ""\n      refTree(false,i+1)\n      videoUrl.value[i]=""\n      state.title[i]=""\n      state.itemObject[i]=""\n      state.showNum[i]=""\n      state.allOperation[i]=""\n      return;\n    }\n    //android\u8bbe\u5907/meshT\n    console.log("\u901a\u77e5\u8bbe\u5907\u63a8\u6d41\uff1a" + item.id )\n    state.itemObject[i]=item\n    webrtcPlayVideo(storage.get(CURRENT_USER).id,item.id).then(res=>{\n      clickTreeItem = null\n      if(res.code==0){\n        if(res.data.code==0){\n          protocol = getProtocolStr()\n          if(state.itemObject[i] != "") addDemand(storage.get(CURRENT_USER).id,item.id)\n          // \u6dfb\u52a0\u4e3b\u5c4f\u70b9\u64ad\u8bb0\u5f55\n          addScreenPlayCount(storage.get(CURRENT_USER).id,item.id)\n          // \u5b58\u50a8\u6d41\u4fe1\u606f\n          state.streamInfo[i] ={app:res.data.data.streamInfos[0].app, stream:res.data.data.streamInfos[0].stream}\n          if(protocol==\'https:\'){\n            state.title[i] = item.name\n            state.playUrl[i]=res.data.data.streamInfos[0].playUrls\n            //\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u88ab\u5173\u95ed \u5426\u5219\u64ad\u653e\n            if(state.itemObject[i] != "") {\n              play(res.data.data.streamInfos[0].playUrls,i+1)\n              //\u8fc75\u79d2\u68c0\u67e5\u8bbe\u5907\u662f\u5426\u5904\u4e8e\u70b9\u64ad\u4e2d\u72b6\u6001\uff0c\u82e5\u5426\u5c31\u5173\u95ed\u5b83\n              setTimeout(()=>{\n                checkDevIsBePlayStatus(item.id,i)\n              },5000)\n            }\n          }else{\n            state.title[i] = item.name\n            state.playUrl[i]=res.data.data.streamInfos[0].playUrl\n            //\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u88ab\u5173\u95ed \u5426\u5219\u64ad\u653e\n            if(state.itemObject[i] != "") {\n              play(res.data.data.streamInfos[0].playUrl,i+1)\n              //\u8fc75\u79d2\u68c0\u67e5\u8bbe\u5907\u662f\u5426\u5904\u4e8e\u70b9\u64ad\u4e2d\u72b6\u6001\uff0c\u82e5\u5426\u5c31\u5173\u95ed\u5b83\n              setTimeout(()=>{\n                checkDevIsBePlayStatus(item.id,i)\n              },5000)\n            }\n          }\n        }else {\n          if(res.data.code == 333){\n            // message.info(\'\u70b9\u64ad\u5df2\u53d6\u6d88\')\n            return\n          }\n          if(isBlank(res.data.data.msg)){\n            message.error(res.data.message)\n          }else{\n            message.error(res.data.data.msg)\n          }\n          refTree(false,i+1)\n          destroy(i+1)\n        }\n      }else{\n        message.error(res.msg)\n        refTree(false,i+1)\n        destroy(i+1)\n      }\n    }).catch(res=>{\n      clickTreeItem = null\n      message.error(res.msg)\n      showSpin.value[i] = ""\n      state.itemObject[i]=""\n    })\n  }else {\n    //\u6444\u50cf\u5934\n    const deviceId = item.parentId\n    const channelId = item.id\n    console.log("\u901a\u77e5\u8bbe\u5907\u63a8\u6d411\uff1a" + deviceId + " : " + channelId )\n    //\u65b0\u589e\u4e00\u4e2a\u70b9\u64ad\u662f\u5426\u662f\u56fd\u6807\u7684\u8bbe\u5907\u6807\u8bc6 \u4ee5\u53ca\u70b9\u64ad\u7684\u7528\u6237id \u4ec5\u5728\u7ea7\u8054\u4e2d\u7684\u56fd\u6807\u8bbe\u5907\u4f7f\u7528\u5230\n    const mdata = reactive({\n      deviceId:deviceId,\n      channelId:channelId,\n      isSubStream:item.fromPlatformCatalog,\n      userId:state.userId\n    })\n    state.itemObject[i]=item\n    PlayVideo(mdata).then(res=>{\n      clickTreeItem = null\n      if(res.code==0){\n        // \u5b58\u50a8\u6d41\u4fe1\u606f\n        state.streamInfo[i] ={app:res.data.app, stream:res.data.stream}\n        // \u6dfb\u52a0\u6d41\u4fe1\u606f\u7edf\u8ba1\u8ba2\u9605\n        addSubscribeStat(res.data.app,res.data.stream)\n        protocol = getProtocolStr()\n        if(protocol==\'https:\'){\n          state.title[i] = item.name\n          state.playUrl[i]=res.data.rtcs\n          //create(i+1)\n          play(res.data.rtcs,i+1)\n        }else {\n          state.title[i] = item.name\n          state.playUrl[i]=res.data.rtc\n          //create(i+1)\n          play(res.data.rtc,i+1)\n        }\n      }else{\n        message.error(res.msg)\n        showSpin.value[i] = ""\n        refTree(false,i+1)\n        videoUrl.value[i]=""\n        state.title[i]=""\n        state.itemObject[i]=""\n        state.showNum[i]=""\n      }\n    }).catch(res=>{\n      clickTreeItem = null\n      message.error(res.msg)\n      showSpin.value[i] = ""\n      state.itemObject[i]=""\n    })\n  }\n}\n'})}),"\n",(0,a.jsx)(n.mermaid,{value:"flowchart TD\n    Start[\u5f00\u59cb\u5904\u7406\u89c6\u9891\u64ad\u653e] --\x3e ShowLoading[\u663e\u793a\u52a0\u8f7d\u56fe\u6807]\n    ShowLoading --\x3e CheckDeviceType{\u5224\u65ad\u8bbe\u5907\u7c7b\u578b}\n    CheckDeviceType --\x3e|Android/MeshT| CheckDeviceStatus{\u68c0\u67e5\u8bbe\u5907\u72b6\u6001}\n    CheckDeviceStatus --\x3e|\u5fd9\u788c| ShowBusyMessage[\u63d0\u793a\u8bbe\u5907\u5fd9\u788c]\n    ShowBusyMessage --\x3e End[\u7ed3\u675f]\n    CheckDeviceStatus --\x3e|\u7a7a\u95f2| RequestStream[\u8bf7\u6c42\u63a8\u6d41]\n    RequestStream --\x3e PlayVideo[\u64ad\u653e\u89c6\u9891]\n    PlayVideo --\x3e CheckStatusAfter5s[5\u79d2\u540e\u68c0\u67e5\u72b6\u6001]\n    CheckDeviceType --\x3e|\u6444\u50cf\u5934| RequestCameraStream[\u8bf7\u6c42\u6444\u50cf\u5934\u63a8\u6d41]\n    RequestCameraStream --\x3e PlayCameraVideo[\u64ad\u653e\u6444\u50cf\u5934\u89c6\u9891]\n    PlayCameraVideo --\x3e End\n    RequestStream --\x3e|\u5931\u8d25| HandleError[\u5904\u7406\u9519\u8bef]\n    RequestCameraStream --\x3e|\u5931\u8d25| HandleError\n    HandleError --\x3e End"}),"\n",(0,a.jsx)(n.mermaid,{value:"flowchart TD\n    Start[\u5f00\u59cb\u64ad\u653e\u903b\u8f91] --\x3e Init[\u521d\u59cb\u5316\u8bbe\u5907\u548c\u901a\u9053\u4fe1\u606f]\n    Init --\x3e CallPlayVideo[\u8c03\u7528PlayVideo\u8bf7\u6c42\u6d41\u4fe1\u606f]\n    CallPlayVideo --\x3e CheckResponse{\u68c0\u67e5\u54cd\u5e94\u72b6\u6001}\n    CheckResponse --\x3e|\u6210\u529f| StoreStreamInfo[\u5b58\u50a8\u6d41\u4fe1\u606f]\n    StoreStreamInfo --\x3e DetermineProtocol{\u5224\u65ad\u534f\u8bae\u7c7b\u578b}\n    DetermineProtocol --\x3e|HTTPS| PlayHTTPS[\u4f7f\u7528RTCS\u5730\u5740\u64ad\u653e]\n    DetermineProtocol --\x3e|\u975eHTTPS| PlayNonHTTPS[\u4f7f\u7528RTC\u5730\u5740\u64ad\u653e]\n    CheckResponse --\x3e|\u5931\u8d25| HandleError[\u5904\u7406\u9519\u8bef\u5e76\u6e05\u7a7a\u72b6\u6001]\n    HandleError --\x3e End[\u7ed3\u675f]\n    PlayHTTPS --\x3e End\n    PlayNonHTTPS --\x3e End\n\n"}),"\n",(0,a.jsx)(n.p,{children:"\u4ee5\u4e0b\u4e3a\u540e\u7aef\u7684\u70b9\u64ad\u63a5\u53e3\u7684\u524d\u7aef\u5b9a\u4e49\u7684api,\u524d\u7aef\u53d1\u9001http \u8bf7\u6c42\uff0c\u643a\u5e26\u8bbe\u5907ID \u548c\u901a\u9053ID"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/api/system/playVideo/index.ts"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"enum Api {\n  playVideo = '/api/play/start',\n  playVideoStop = '/api/play/stop',\n  playVideoStopRea = '/api/play/stopRea',\n  getMediaInfo ='/wvp/play/getStreamInfo'\n}\n\nexport function PlayVideo(params) {\n  return http.request({\n    url: [Api.playVideo,params.deviceId,params.channelId].join('/')+ \"?isSubStream=\" + params.isSubStream+ \"&userId=\" + params.userId,\n    method: RequestEnum.GET,\n  }, {\n    isShowErrorMessage: true\n  });\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"\u9644\u524d\u7aef\u6293\u5305\u8bf7\u6c42\uff1a"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image-20250414171515407",src:r(71201).A+"",width:"1881",height:"928"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-url",children:"https://127.0.0.1:8970/api/play/start/44010200492000000002/34020000001310000177?isSubStream=false&userId=1\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image-20250414171549612",src:r(34268).A+"",width:"1280",height:"693"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n    "code": 0,\n    "msg": "\u6210\u529f",\n    "data": {\n        "app": "rtp",\n        "stream": "44010200492000000002_34020000001310000177",\n        "ip": null,\n        "flv": "http://172.168.5.247:6080/rtp/44010200492000000002_34020000001310000177.live.flv",\n        "https_flv": "https://172.168.5.247:10443/rtp/44010200492000000002_34020000001310000177.live.flv",\n        "ws_flv": "ws://172.168.5.247:6080/rtp/44010200492000000002_34020000001310000177.live.flv",\n        "wss_flv": "wss://172.168.5.247:10443/rtp/44010200492000000002_34020000001310000177.live.flv",\n        "fmp4": "http://172.168.5.247:6080/rtp/44010200492000000002_34020000001310000177.live.mp4",\n        "https_fmp4": "https://172.168.5.247:10443/rtp/44010200492000000002_34020000001310000177.live.mp4",\n        "ws_fmp4": "ws://172.168.5.247:6080/rtp/44010200492000000002_34020000001310000177.live.mp4",\n        "wss_fmp4": "wss://172.168.5.247:10443/rtp/44010200492000000002_34020000001310000177.live.mp4",\n        "hls": "http://172.168.5.247:6080/rtp/44010200492000000002_34020000001310000177/hls.m3u8",\n        "https_hls": "https://172.168.5.247:10443/rtp/44010200492000000002_34020000001310000177/hls.m3u8",\n        "ws_hls": "ws://172.168.5.247:6080/rtp/44010200492000000002_34020000001310000177/hls.m3u8",\n        "wss_hls": "wss://172.168.5.247:10443/rtp/44010200492000000002_34020000001310000177/hls.m3u8",\n        "ts": "http://172.168.5.247:6080/rtp/44010200492000000002_34020000001310000177.live.ts",\n        "https_ts": "https://172.168.5.247:10443/rtp/44010200492000000002_34020000001310000177.live.ts",\n        "ws_ts": "ws://172.168.5.247:6080/rtp/44010200492000000002_34020000001310000177.live.ts",\n        "wss_ts": null,\n        "rtmp": "rtmp://172.168.5.247:1935/rtp/44010200492000000002_34020000001310000177",\n        "rtmps": null,\n        "rtsp": "rtsp://172.168.5.247:10554/rtp/44010200492000000002_34020000001310000177",\n        "rtsps": null,\n        "rtc": "http://172.168.5.247:6080/index/api/webrtc?app=rtp&stream=44010200492000000002_34020000001310000177&type=play",\n        "rtcs": "https://172.168.5.247:10443/index/api/webrtc?app=rtp&stream=44010200492000000002_34020000001310000177&type=play",\n        "mediaServerId": "wvpmediaserver001",\n        "tracks": [\n            {\n                "channels": 1,\n                "codecId": 0,\n                "codecIdName": null,\n                "codecType": 0,\n                "ready": true,\n                "sampleBit": 0,\n                "sampleRate": 0,\n                "fps": 0,\n                "height": 0,\n                "width": 0\n            },\n            {\n                "channels": 0,\n                "codecId": 0,\n                "codecIdName": null,\n                "codecType": 0,\n                "ready": true,\n                "sampleBit": 0,\n                "sampleRate": 0,\n                "fps": 0,\n                "height": 1080,\n                "width": 1920\n            }\n        ],\n        "startTime": null,\n        "endTime": null,\n        "progress": 0.0\n    }\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"2\u540e\u7aefsip\u4fe1\u4ee4\u670d\u52a1\u5668\u5904\u7406\u8bf7\u6c42",children:"2.\u540e\u7aef(SIP\u4fe1\u4ee4\u670d\u52a1\u5668)\uff1a\u5904\u7406\u8bf7\u6c42"}),"\n",(0,a.jsxs)(n.h3,{id:"1--\u9996\u5148\u6dfb\u52a0\u901a\u4fe1\u8bb0\u5f55\u5e95\u5c42\u4f1a\u4ecejwt\u67e5\u8be2usergb_user\u548c\u8bbe\u5907devicewvp_device\u4fe1\u606f\u7136\u540e\u6dfb\u52a0\u5230\u901a\u4fe1\u8bb0\u5f55\u8868\u4e2dsys_communication_record",children:["(1)  \u9996\u5148\uff0c",(0,a.jsx)(n.code,{children:"\u6dfb\u52a0\u901a\u4fe1\u8bb0\u5f55"}),",\u5e95\u5c42\u4f1a\u4eceJWT\u67e5\u8be2User(",(0,a.jsx)(n.code,{children:"gb_user"}),")\u548c\u8bbe\u5907Device(",(0,a.jsx)(n.code,{children:"wvp_device"}),")\u4fe1\u606f\uff0c\u7136\u540e\u6dfb\u52a0\u5230\u901a\u4fe1\u8bb0\u5f55\u8868\u4e2d",(0,a.jsx)(n.code,{children:"sys_communication_record"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image-20250414172234257",src:r(67179).A+"",width:"1022",height:"312"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/vmanager/gb28181/play/PlayController.java"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Operation(summary = "\u5f00\u59cb\u70b9\u64ad")\n@Parameter(name = "deviceId", description = "\u8bbe\u5907\u56fd\u6807\u7f16\u53f7", required = true)\n@Parameter(name = "channelId", description = "\u901a\u9053\u56fd\u6807\u7f16\u53f7", required = true)\n@GetMapping("/start/{deviceId}/{channelId}")\npublic DeferredResult<WVPResult<StreamContent>> play(HttpServletRequest request, @PathVariable String deviceId,\n                                         @PathVariable String channelId,Boolean isSubStream,String userId) {\n\n    logger.info("[\u5f00\u59cb\u70b9\u64ad] deviceId\uff1a{}, channelId\uff1a{}, ", deviceId, channelId);\n\n    // \u6dfb\u52a0\u901a\u4fe1\u8bb0\u5f55\n    sysCommunicationRecordService.insertSysCommunicationRecord(request,deviceId);\n    ...\n}\n'})}),"\n",(0,a.jsxs)(n.h3,{id:"2--\u5176\u6b21\u83b7\u53d6\u4e00\u4e2azlm\u591a\u5a92\u4f53\u670d\u52a1\u5668srcmainjavacomgbcomwvpvmpvmanagergb28181playplaycontrollerjava",children:["(2)  \u5176\u6b21\uff0c\u83b7\u53d6\u4e00\u4e2azlm\u591a\u5a92\u4f53\u670d\u52a1\u5668.",(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/vmanager/gb28181/play/PlayController.java"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"Device device = storager.queryVideoDevice(deviceId);\nMediaServerItem newMediaServerItem = playService.getNewMediaServerItem(device);\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u5176\u4e2d\u7684\u5e95\u5c42\u8c03\u7528\u5982\u4e0b\uff0c\u5176\u4e2d\u501f\u52a9\u4e86redis\u4e2d\u7684\u6709\u5e8f\u5217\u8868,\u8be5zset\u5b58\u50a8\u4e86\u6240\u6709\u7684\u5a92\u4f53\u670d\u52a1\u5668id\uff0czset\u4e2d\u6309\u7167\u5206\u503c\u4ece\u5c0f\u5230\u5927\uff0c\u6392\u5e8f\u4e86\u6240\u6709\u7684\u8282\u70b9\uff0c\u4f1a\u53bb\u53d6\u6700\u5c0f\u7684\u8282\u70b9\uff0c\u4e4b\u540e\u518d\u4eceredis\u83b7\u53d6\u8fd9\u4e2aid\u7684\u5a92\u4f53\u670d\u52a1\u5668zlm\u7684\u4fe1\u606f"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/service/impl/MediaServerServiceImpl.java"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'/**\n * \u83b7\u53d6\u8d1f\u8f7d\u6700\u4f4e\u7684\u8282\u70b9\n * @return MediaServerItem\n */\n@Override\npublic MediaServerItem getMediaServerForMinimumLoad(Boolean hasAssist) {\n    String key = VideoManagerConstants.MEDIA_SERVERS_ONLINE_PREFIX + userSetting.getServerId();\n    Long size = redisTemplate.opsForZSet().zCard(key);\n    if (size  == null || size == 0) {\n        logger.info("\u83b7\u53d6\u8d1f\u8f7d\u6700\u4f4e\u7684\u8282\u70b9\u65f6\u65e0\u5728\u7ebf\u8282\u70b9");\n        return null;\n    }\n\n    // \u83b7\u53d6\u5206\u6570\u6700\u4f4e\u7684\uff0c\u53ca\u5e76\u53d1\u6700\u4f4e\u7684\n    Set<Object> objects = redisTemplate.opsForZSet().range(key, 0, -1);\n    ArrayList<Object> mediaServerObjectS = new ArrayList<>(objects);\n    MediaServerItem mediaServerItem = null;\n    if (hasAssist == null) {\n        String mediaServerId = (String)mediaServerObjectS.get(0);\n        mediaServerItem = getOne(mediaServerId);\n    }else if (hasAssist) {\n        for (Object mediaServerObject : mediaServerObjectS) {\n            String mediaServerId = (String)mediaServerObject;\n            MediaServerItem serverItem = getOne(mediaServerId);\n            if (serverItem.getRecordAssistPort() > 0) {\n                mediaServerItem = serverItem;\n                break;\n            }\n        }\n    }else if (!hasAssist) {\n        for (Object mediaServerObject : mediaServerObjectS) {\n            String mediaServerId = (String)mediaServerObject;\n            MediaServerItem serverItem = getOne(mediaServerId);\n            if (serverItem.getRecordAssistPort() == 0) {\n                mediaServerItem = serverItem;\n                break;\n            }\n        }\n    }\n\n    return mediaServerItem;\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image-20250414172442465",src:r(24041).A+"",width:"1072",height:"640"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image-20250414172500978",src:r(99247).A+"",width:"1072",height:"655"})}),"\n",(0,a.jsxs)(n.h3,{id:"3-\u7d27\u63a5\u7740\u8bbe\u7f6e\u597d\u8d85\u65f6\u7684\u51fd\u6570\u548c\u672a\u8d85\u65f6\u7684\u5904\u7406\u51fd\u6570\u8c03\u7528playserviceplay",children:["(3) \u7d27\u63a5\u7740\uff0c\u8bbe\u7f6e\u597d\u8d85\u65f6\u7684\u51fd\u6570\u548c\u672a\u8d85\u65f6\u7684\u5904\u7406\u51fd\u6570\uff0c\u8c03\u7528",(0,a.jsx)(n.code,{children:"playService.play()"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/vmanager/gb28181/play/PlayController.java"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'RequestMessage requestMessage = new RequestMessage()\nString key = DeferredResultHolder.CALLBACK_CMD_PLAY + deviceId + channelId;\nrequestMessage.setKey(key);\nString uuid = UUID.randomUUID().toString();\nrequestMessage.setId(uuid);\nDeferredResult<WVPResult<StreamContent>> result = new DeferredResult<>(userSetting.getPlayTimeout().longValue());\n\nresult.onTimeout(()->{\n    logger.info("[\u70b9\u64ad\u7b49\u5f85\u8d85\u65f6] deviceId\uff1a{}, channelId\uff1a{}, ", deviceId, channelId);\n    // \u91ca\u653ertpserver\n    WVPResult<StreamInfo> wvpResult = new WVPResult<>();\n    wvpResult.setCode(ErrorCode.ERROR100.getCode());\n    wvpResult.setMsg("\u70b9\u64ad\u8d85\u65f6");\n    requestMessage.setData(wvpResult);\n    resultHolder.invokeAllResult(requestMessage);\n    inviteStreamService.removeInviteInfoByDeviceAndChannel(InviteSessionType.PLAY, deviceId, channelId);\n    storager.stopPlay(deviceId, channelId);\n});\n\n// \u5f55\u50cf\u67e5\u8be2\u4ee5channelId\u4f5c\u4e3adeviceId\u67e5\u8be2\nresultHolder.put(key, uuid, result);\n\nplayService.play(newMediaServerItem, deviceId, channelId, null, (code, msg, data) -> {\n    WVPResult<StreamContent> wvpResult = new WVPResult<>();\n    if (code == InviteErrorCode.SUCCESS.getCode()) {\n       wvpResult.setCode(ErrorCode.SUCCESS.getCode());\n       wvpResult.setMsg(ErrorCode.SUCCESS.getMsg());\n\n       if (data != null) {\n          StreamInfo streamInfo = (StreamInfo)data;\n          if (userSetting.getUseSourceIpAsStreamIp()) {\n             streamInfo=streamInfo.clone();//\u6df1\u62f7\u8d1d\n             String host;\n             try {\n                URL url=new URL(request.getRequestURL().toString());\n                host=url.getHost();\n             } catch (MalformedURLException e) {\n                host=request.getLocalAddr();\n             }\n             streamInfo.channgeStreamIp(host);\n          }\n          wvpResult.setData(new StreamContent(streamInfo));\n       }\n    }else {\n       wvpResult.setCode(code);\n       wvpResult.setMsg(msg);\n    }\n    requestMessage.setData(wvpResult);\n    resultHolder.invokeResult(requestMessage);\n});\nreturn result;\n'})}),"\n",(0,a.jsxs)(n.h3,{id:"4--\u8fdb\u4e00\u6b65\u8c03\u7528\u5e95\u5c42\u7684srcmainjavacomgbcomwvpvmpserviceimplplayserviceimpljava\u4e2d\u7684play\u65b9\u6cd5\u5f00\u542fopenrtpserver-\u62ff\u5230ssrcinfo",children:["(4)  \u8fdb\u4e00\u6b65\u8c03\u7528\u5e95\u5c42\u7684",(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/service/impl/PlayServiceImpl.java"}),"\u4e2d\u7684play\u65b9\u6cd5\uff0c\u5f00\u542fopenRTPServer \uff0c\u62ff\u5230SSRCInfo"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"ssrc"}),' \u662f "Synchronization Source Identifier" \u7684\u7f29\u5199\uff0c\u901a\u5e38\u7528\u4e8e RTP\uff08\u5b9e\u65f6\u4f20\u8f93\u534f\u8bae\uff09\u4e2d\u6807\u8bc6\u6570\u636e\u6d41\u7684\u6765\u6e90\u3002\u5728\u89c6\u9891\u6d41\u5a92\u4f53\u573a\u666f\u4e2d\uff0c',(0,a.jsx)(n.code,{children:"ssrc"})," \u662f\u4e00\u4e2a\u552f\u4e00\u7684\u6570\u503c\uff0c\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u7684\u97f3\u89c6\u9891\u6d41\u3002"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/service/impl/PlayServiceImpl.java"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Override\n    public SSRCInfo play(MediaServerItem mediaServerItem, String deviceId, String channelId, String ssrc, ErrorCallback<Object> callback) {\n        if (mediaServerItem == null) {\n            logger.warn("[\u70b9\u64ad] \u672a\u627e\u5230\u53ef\u7528\u7684zlm deviceId: {},channelId:{}", deviceId, channelId);\n            throw new ControllerException(ErrorCode.ERROR100.getCode(), "\u672a\u627e\u5230\u53ef\u7528\u7684zlm");\n        }\n\n        Device device = redisCatchStorage.getDevice(deviceId);\n        if (device.getStreamMode().equalsIgnoreCase("TCP-ACTIVE") && !mediaServerItem.isRtpEnable()) {\n            logger.warn("[\u70b9\u64ad] \u5355\u7aef\u53e3\u6536\u6d41\u65f6\u4e0d\u652f\u6301TCP\u4e3b\u52a8\u65b9\u5f0f\u6536\u6d41 deviceId: {},channelId:{}", deviceId, channelId);\n            throw new ControllerException(ErrorCode.ERROR100.getCode(), "\u5355\u7aef\u53e3\u6536\u6d41\u65f6\u4e0d\u652f\u6301TCP\u4e3b\u52a8\u65b9\u5f0f\u6536\u6d41");\n        }\n        InviteInfo inviteInfo = inviteStreamService.getInviteInfoByDeviceAndChannel(InviteSessionType.PLAY, deviceId, channelId);\n        if (inviteInfo != null ) {\n            if (inviteInfo.getStreamInfo() == null) {\n                // \u70b9\u64ad\u53d1\u8d77\u4e86\u4f46\u662f\u5c1a\u672a\u6210\u529f, \u4ec5\u6ce8\u518c\u56de\u8c03\u7b49\u5f85\u7ed3\u679c\u5373\u53ef\n                inviteStreamService.once(InviteSessionType.PLAY, deviceId, channelId, null, callback);\n                logger.info("[\u70b9\u64ad\u5f00\u59cb] \u5df2\u7ecf\u8bf7\u6c42\u4e2d\uff0c\u7b49\u5f85\u7ed3\u679c\uff0c deviceId: {}, channelId: {}", device.getDeviceId(), channelId);\n                return inviteInfo.getSsrcInfo();\n            }else {\n                StreamInfo streamInfo = inviteInfo.getStreamInfo();\n                String streamId = streamInfo.getStream();\n                if (streamId == null) {\n                    callback.run(InviteErrorCode.ERROR_FOR_CATCH_DATA.getCode(), "\u70b9\u64ad\u5931\u8d25\uff0c redis\u7f13\u5b58streamId\u7b49\u4e8enull", null);\n                    inviteStreamService.call(InviteSessionType.PLAY, device.getDeviceId(), channelId, null,\n                            InviteErrorCode.ERROR_FOR_CATCH_DATA.getCode(),\n                            "\u70b9\u64ad\u5931\u8d25\uff0c redis\u7f13\u5b58streamId\u7b49\u4e8enull",\n                            null);\n                    return inviteInfo.getSsrcInfo();\n                }\n                String mediaServerId = streamInfo.getMediaServerId();\n                MediaServerItem mediaInfo = mediaServerService.getOne(mediaServerId);\n\n                Boolean ready = zlmServerFactory.isStreamReady(mediaInfo, "rtp", streamId);\n                if (ready != null && ready) {\n                    callback.run(InviteErrorCode.SUCCESS.getCode(), InviteErrorCode.SUCCESS.getMsg(), streamInfo);\n                    inviteStreamService.call(InviteSessionType.PLAY, device.getDeviceId(), channelId, null,\n                            InviteErrorCode.SUCCESS.getCode(),\n                            InviteErrorCode.SUCCESS.getMsg(),\n                            streamInfo);\n                    logger.info("[\u70b9\u64ad\u5df2\u5b58\u5728] \u76f4\u63a5\u8fd4\u56de\uff0c deviceId: {}, channelId: {}", device.getDeviceId(), channelId);\n                    //\u5728\u8fd4\u56de\u7684\u65f6\u5019\u9700\u8981\u901a\u77e5\u4e00\u4e0b\u4e0b\u7ea7\u5b58\u4e00\u4e0buserId\n                    //\u8fd9\u4e2a\u4e5f\u4e0d\u9700\u8981\n//                    if(mediaServerItem.isSubStream()){\n//                        //\u53ea\u9488\u5bf9\u7ea7\u8054\u7528\u6237\n//                        //\u65b0\u589e\u901a\u77e5\u4e0a\u7ea7\u5e73\u53f0\u5237\u65b0\n//                        //\u518d\u6839\u636echannelId \u5224\u65ad\u662f\u6b63\u7ecf\u56fd\u6807\u7ea7\u8054\u8fd8\u662f\u76f4\u64ad\u6d41\u7ea7\u8054 \u4f46\u662f\u6309\u7167\u6211\u4eec\u7684\u89c4\u5219\u53d634010000004560000003  456\u4ee3\u8868\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\n//                        //\u622a\u53d634010000004560000003\u7684456\n//                        String substring = channelId.substring(10, 13);\n//                        if("456".equals(substring)) {\n//                            logger.info("\u82e5\u53d1\u73b0\u4e0b\u7ea7\u5e73\u53f0\u5b58\u5728\u70b9\u64ad\u8005 \u81ea\u7814\u8bbe\u5907\u70b9\u64ad\u901a\u77e5\u4e0b\u7ea7\u8bb0\u5f55\u70b9\u64ad\u8005\u901a\u77e5");\n//                            platformChannelService.sendPlayUserIdToPlatform(mediaServerItem.getUserId(), deviceId,channelId);\n//                        }\n//                    }\n                    return inviteInfo.getSsrcInfo();\n                }else {\n                    // \u70b9\u64ad\u53d1\u8d77\u4e86\u4f46\u662f\u5c1a\u672a\u6210\u529f, \u4ec5\u6ce8\u518c\u56de\u8c03\u7b49\u5f85\u7ed3\u679c\u5373\u53ef\n                    inviteStreamService.once(InviteSessionType.PLAY, deviceId, channelId, null, callback);\n                    storager.stopPlay(streamInfo.getDeviceID(), streamInfo.getChannelId());\n                    inviteStreamService.removeInviteInfoByDeviceAndChannel(InviteSessionType.PLAY, deviceId, channelId);\n                }\n            }\n        }\n        String streamId = String.format("%s_%s", device.getDeviceId(), channelId);;\n        SSRCInfo ssrcInfo = mediaServerService.openRTPServer(mediaServerItem, streamId, ssrc, device.isSsrcCheck(),  false, 0, false, device.getStreamModeForParam());\n        if (ssrcInfo == null) {\n            callback.run(InviteErrorCode.ERROR_FOR_RESOURCE_EXHAUSTION.getCode(), InviteErrorCode.ERROR_FOR_RESOURCE_EXHAUSTION.getMsg(), null);\n            inviteStreamService.call(InviteSessionType.PLAY, device.getDeviceId(), channelId, null,\n                    InviteErrorCode.ERROR_FOR_RESOURCE_EXHAUSTION.getCode(),\n                    InviteErrorCode.ERROR_FOR_RESOURCE_EXHAUSTION.getMsg(),\n                    null);\n            return null;\n        }\n        play(mediaServerItem, ssrcInfo, device, channelId, callback);\n        return ssrcInfo;\n    }\n'})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/service/impl/MediaServerServiceImpl.java"}),"\u4e2d\u7684",(0,a.jsx)(n.code,{children:"openRTPServer"}),"\u65b9\u6cd5\u5982\u4e0b"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/service/impl/MediaServerServiceImpl.java"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Override\npublic SSRCInfo openRTPServer(MediaServerItem mediaServerItem, String streamId, String presetSsrc, boolean ssrcCheck,\n                              boolean isPlayback, Integer port, Boolean reUsePort, Integer tcpMode) {\n    if (mediaServerItem == null || mediaServerItem.getId() == null) {\n        logger.info("[openRTPServer] \u5931\u8d25, mediaServerItem == null || mediaServerItem.getId() == null");\n        return null;\n    }\n    // \u83b7\u53d6mediaServer\u53ef\u7528\u7684ssrc\n    String ssrc;\n    if (presetSsrc != null) {\n        ssrc = presetSsrc;\n    }else {\n        if (isPlayback) {\n            ssrc = ssrcFactory.getPlayBackSsrc(mediaServerItem.getId());\n        }else {\n            ssrc = ssrcFactory.getPlaySsrc(mediaServerItem.getId());\n        }\n    }\n\n    if (streamId == null) {\n        streamId = String.format("%08x", Long.parseLong(ssrc)).toUpperCase();\n    }\n    int ssrcCheckParam = 0;\n    if (ssrcCheck && tcpMode > 1) {\n        // \u76ee\u524dzlm\u4e0d\u652f\u6301 tcp\u6a21\u5f0f\u66f4\u65b0ssrc\uff0c\u6682\u65f6\u5173\u95edssrc\u6821\u9a8c\n        logger.warn("[openRTPServer] TCP\u88ab\u52a8/TCP\u4e3b\u52a8\u6536\u6d41\u65f6\uff0c\u9ed8\u8ba4\u5173\u95edssrc\u68c0\u9a8c");\n    }\n    int rtpServerPort;\n    if (mediaServerItem.isRtpEnable()) {\n        rtpServerPort = zlmServerFactory.createRTPServer(mediaServerItem, streamId, (ssrcCheck && tcpMode == 0) ? Long.parseLong(ssrc) : 0, port, reUsePort, tcpMode);\n    } else {\n        rtpServerPort = mediaServerItem.getRtpProxyPort();\n    }\n    return new SSRCInfo(rtpServerPort, ssrc, streamId);\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u5176\u4e2d\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/service/impl/MediaServerServiceImpl.java"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"rtpServerPort = zlmServerFactory.createRTPServer(mediaServerItem, streamId, (ssrcCheck && tcpMode == 0) ? Long.parseLong(ssrc) : 0, port, reUsePort, tcpMode);\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/media/zlm/ZLMServerFactory.java"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"/**\n * \u5f00\u542frtpServer\n * @param mediaServerItem zlm\u670d\u52a1\u5b9e\u4f8b\n * @param streamId \u6d41Id\n * @param ssrc ssrc\n * @param port \u7aef\u53e3\uff0c 0/null\u4e3a\u4f7f\u7528\u968f\u673a\n * @param reUsePort \u662f\u5426\u91cd\u7528\u7aef\u53e3\n * @param tcpMode 0/null udp \u6a21\u5f0f\uff0c1 tcp \u88ab\u52a8\u6a21\u5f0f, 2 tcp \u4e3b\u52a8\u6a21\u5f0f\u3002\n * @return\n */\npublic int createRTPServer(MediaServerItem mediaServerItem, String streamId, long ssrc, Integer port, Boolean reUsePort, Integer tcpMode) {\n    int result = -1;\n    // \u67e5\u8be2\u6b64rtp server \u662f\u5426\u5df2\u7ecf\u5b58\u5728\n    JSONObject rtpInfo = zlmresTfulUtils.getRtpInfo(mediaServerItem, streamId);\n    logger.info(JSONObject.toJSONString(rtpInfo));\n    \n    ...\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/media/zlm/ZLMRESTfulUtils.java"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'public JSONObject getRtpInfo(MediaServerItem mediaServerItem, String stream_id){\n    Map<String, Object> param = new HashMap<>();\n    param.put("stream_id",stream_id);\n    return sendPost(mediaServerItem, "getRtpInfo",param, null);\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u8fd9\u91cc\u4e3b\u8981\u662f\u901a\u8fc7sendPost\u5411zlm\u6d41\u5a92\u4f53\u670d\u52a1\u5668\u53d1\u4e00\u4e2a\u8bf7\u6c42\uff0c\u770b\u770b\u80fd\u5426\u6b63\u5e38\u94fe\u63a5zlm\u6d41\u5a92\u4f53\u670d\u52a1\u5668"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/media/zlm/ZLMRESTfulUtils.java"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'public JSONObject sendPost(MediaServerItem mediaServerItem, String api, Map<String, Object> param, RequestCallback callback) {\n    OkHttpClient client = getClient();\n\n    if (mediaServerItem == null) {\n        return null;\n    }\n    String url = String.format("http://%s:%s/index/api/%s",  mediaServerItem.getIp(), mediaServerItem.getHttpPort(), api);\n    logger.info("\u8bbf\u95eeZLM\u63a5\u53e3: " + url);\n    JSONObject responseJSON = new JSONObject();\n    //-2\u81ea\u5b9a\u4e49\u6d41\u5a92\u4f53 \u8c03\u7528\u9519\u8bef\u7801\n    responseJSON.put("code",-2);\n    responseJSON.put("msg","\u6d41\u5a92\u4f53\u8c03\u7528\u5931\u8d25");\n\n    FormBody.Builder builder = new FormBody.Builder();\n    builder.add("secret",mediaServerItem.getSecret());\n    if (param != null && param.keySet().size() > 0) {\n        for (String key : param.keySet()){\n            if (param.get(key) != null) {\n                builder.add(key, param.get(key).toString());\n            }\n        }\n    }\n\n    FormBody body = builder.build();\n\n    Request request = new Request.Builder()\n            .post(body)\n            .url(url)\n            .build();\n        if (callback == null) {\n            try {\n                Response response = client.newCall(request).execute();\n                if (response.isSuccessful()) {\n                    ResponseBody responseBody = response.body();\n                    if (responseBody != null) {\n                        String responseStr = responseBody.string();\n                        responseJSON = JSON.parseObject(responseStr);\n                    }\n                }else {\n                    response.close();\n                    Objects.requireNonNull(response.body()).close();\n                }\n            }catch (IOException e) {\n                logger.error(String.format("[ %s ]\u8bf7\u6c42\u5931\u8d25: %s", url, e.getMessage()));\n\n                if(e instanceof SocketTimeoutException){\n                    //\u8bfb\u53d6\u8d85\u65f6\u8d85\u65f6\u5f02\u5e38\n                    logger.error(String.format("\u8bfb\u53d6ZLM\u6570\u636e\u5931\u8d25: %s, %s", url, e.getMessage()));\n                }\n                if(e instanceof ConnectException){\n                    //\u5224\u65ad\u8fde\u63a5\u5f02\u5e38\uff0c\u6211\u8fd9\u91cc\u662f\u62a5Failed to connect to 10.7.5.144\n                    logger.error(String.format("\u8fde\u63a5ZLM\u5931\u8d25: %s, %s", url, e.getMessage()));\n                }\n\n            }catch (Exception e){\n                logger.error(String.format("\u8bbf\u95eeZLM\u5931\u8d25: %s, %s", url, e.getMessage()));\n            }\n        }else {\n            client.newCall(request).enqueue(new Callback(){\n                @Override\n                public void onResponse(@NotNull Call call, @NotNull Response response){\n                    if (response.isSuccessful()) {\n                        try {\n                            String responseStr = Objects.requireNonNull(response.body()).string();\n                            callback.run(JSON.parseObject(responseStr));\n                        } catch (IOException e) {\n                            logger.error(String.format("[ %s ]\u8bf7\u6c42\u5931\u8d25: %s", url, e.getMessage()));\n                        }\n\n                    }else {\n                        response.close();\n                        Objects.requireNonNull(response.body()).close();\n                    }\n                }\n                @Override\n                public void onFailure(@NotNull Call call, @NotNull IOException e) {\n                    logger.error(String.format("\u8fde\u63a5ZLM\u5931\u8d25: %s, %s", call.request().toString(), e.getMessage()));\n\n                    if(e instanceof SocketTimeoutException){\n                        //\u8bfb\u53d6\u8d85\u65f6\u8d85\u65f6\u5f02\u5e38\n                        logger.error(String.format("\u8bfb\u53d6ZLM\u6570\u636e\u5931\u8d25: %s, %s", call.request().toString(), e.getMessage()));\n                    }\n                    if(e instanceof ConnectException){\n                        //\u5224\u65ad\u8fde\u63a5\u5f02\u5e38\uff0c\u6211\u8fd9\u91cc\u662f\u62a5Failed to connect to 10.7.5.144\n                        logger.error(String.format("\u8fde\u63a5ZLM\u5931\u8d25: %s, %s", call.request().toString(), e.getMessage()));\n                    }\n                }\n            });\n        }\n\n    if(Objects.equals(responseJSON.getString("msg"),"\u6d41\u5a92\u4f53\u8c03\u7528\u5931\u8d25")){\n        logger.error("sendPost\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff1a"+responseJSON+",api\u4e3a===>"+api);\n    }\n    return responseJSON;\n}\n'})}),"\n",(0,a.jsx)(n.mermaid,{value:"flowchart TD\n    Start[\u5f00\u59cb] --\x3e CheckMediaServer{\u68c0\u67e5\u6d41\u5a92\u4f53\u670d\u52a1\u9879\u4e3a\u7a7a}\n    CheckMediaServer --\x3e|Yes| ReturnNull[\u8fd4\u56de\u7a7a]\n    CheckMediaServer --\x3e|No| BuildRequest[\u6784\u9020\u8bf7\u6c42URL\u548c\u8868\u5355\u6570\u636e]\n    BuildRequest --\x3e HasCallback{\u662f\u5426\u6709\u56de\u8c03\u51fd\u6570}\n    HasCallback --\x3e|Yes| AsyncRequest[\u5f02\u6b65\u53d1\u9001\u8bf7\u6c42]\n    HasCallback --\x3e|No| SyncRequest[\u540c\u6b65\u53d1\u9001\u8bf7\u6c42]\n    SyncRequest --\x3e HandleResponse[\u5904\u7406\u54cd\u5e94]\n    AsyncRequest --\x3e CallbackHandle[\u56de\u8c03\u5904\u7406\u54cd\u5e94]\n    HandleResponse --\x3e CheckError{\u68c0\u67e5\u54cd\u5e94\u662f\u5426\u9519\u8bef}\n    CallbackHandle --\x3e End[\u7ed3\u675f]\n    CheckError --\x3e|Yes| LogError[\u8bb0\u5f55\u9519\u8bef\u65e5\u5fd7]\n    CheckError --\x3e|No| ReturnResponse[\u8fd4\u56de\u54cd\u5e94]\n    LogError --\x3e ReturnResponse\n    ReturnResponse --\x3e End\n"}),"\n",(0,a.jsxs)(n.h3,{id:"5-\u518d\u56de\u5230srcmainjavacomgbcomwvpvmpmediazlmzlmserverfactoryjava\u8fd9\u4e2a\u65f6\u5019\u5df2\u7ecf\u786e\u8ba4\u4e86rtp-server\u662f\u5b58\u5728\u5e76\u4e14\u662f\u53ef\u4ee5\u6b63\u5e38\u8c03\u7528\u7684\u4e86\u7d27\u63a5\u7740\u5c31\u53bb\u6267\u884c\u8c03\u7528\u8fd9\u4e2artp\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\u7684\u903b\u8f91\u5e95\u5c42\u4e5f\u662f\u8c03\u7528sendpost\u8fd9\u4e2a\u65b9\u6cd5\u8fc7\u7a0b\u4e2d\u5982\u679c\u51fa\u73b0\u5f02\u5e38\u5c31\u62a5\u9519\u6216\u8005\u91cd\u542frtpsever",children:["(5) \u518d\u56de\u5230",(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/media/zlm/ZLMServerFactory.java"}),",\u8fd9\u4e2a\u65f6\u5019\u5df2\u7ecf\u786e\u8ba4\u4e86",(0,a.jsx)(n.code,{children:"rtp server"}),"\u662f\u5b58\u5728\u5e76\u4e14\u662f\u53ef\u4ee5\u6b63\u5e38\u8c03\u7528\u7684\u4e86\uff0c\u7d27\u63a5\u7740\u5c31\u53bb\u6267\u884c\u8c03\u7528\u8fd9\u4e2aRTP\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\u7684\u903b\u8f91\uff0c\u5e95\u5c42\u4e5f\u662f\u8c03\u7528",(0,a.jsx)(n.code,{children:"sendPost"}),"\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u8fc7\u7a0b\u4e2d\u5982\u679c\u51fa\u73b0\u5f02\u5e38\uff0c\u5c31\u62a5\u9519\uff0c\u6216\u8005\u91cd\u542fRtpSever"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/media/zlm/ZLMServerFactory.java"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'/**\n * \u5f00\u542frtpServer\n * @param mediaServerItem zlm\u670d\u52a1\u5b9e\u4f8b\n * @param streamId \u6d41Id\n * @param ssrc ssrc\n * @param port \u7aef\u53e3\uff0c 0/null\u4e3a\u4f7f\u7528\u968f\u673a\n * @param reUsePort \u662f\u5426\u91cd\u7528\u7aef\u53e3\n * @param tcpMode 0/null udp \u6a21\u5f0f\uff0c1 tcp \u88ab\u52a8\u6a21\u5f0f, 2 tcp \u4e3b\u52a8\u6a21\u5f0f\u3002\n * @return\n */\npublic int createRTPServer(MediaServerItem mediaServerItem, String streamId, long ssrc, Integer port, Boolean reUsePort, Integer tcpMode) {\n    int result = -1;\n    // \u67e5\u8be2\u6b64rtp server \u662f\u5426\u5df2\u7ecf\u5b58\u5728\n    JSONObject rtpInfo = zlmresTfulUtils.getRtpInfo(mediaServerItem, streamId);\n    logger.info(JSONObject.toJSONString(rtpInfo));\n    if(rtpInfo.getInteger("code") == 0){\n        if (rtpInfo.getBoolean("exist")) {\n            result = rtpInfo.getInteger("local_port");\n            if (result == 0) {\n                // \u6b64\u65f6\u8bf4\u660ertpServer\u5df2\u7ecf\u521b\u5efa\u4f46\u662f\u6d41\u8fd8\u6ca1\u6709\u63a8\u4e0a\u6765\n                // \u6b64\u65f6\u91cd\u65b0\u6253\u5f00rtpServer\n                Map<String, Object> param = new HashMap<>();\n                param.put("stream_id", streamId);\n                JSONObject jsonObject = zlmresTfulUtils.closeRtpServer(mediaServerItem, param);\n                if (jsonObject != null ) {\n                    if (jsonObject.getInteger("code") == 0) {\n                        return createRTPServer(mediaServerItem, streamId, ssrc, port, reUsePort, tcpMode);\n                    }else {\n                        logger.warn("[\u5f00\u542frtpServer], \u91cd\u542fRtpServer\u9519\u8bef");\n                    }\n                }\n            }\n            return result;\n        }\n    }else if(rtpInfo.getInteger("code") == -2){\n        return result;\n    }\n\n    Map<String, Object> param = new HashMap<>();\n\n    if (tcpMode == null) {\n        tcpMode = 0;\n    }\n    param.put("tcp_mode", tcpMode);\n    param.put("stream_id", streamId);\n    if (reUsePort != null) {\n        param.put("re_use_port", reUsePort?"1":"0");\n    }\n    // \u63a8\u6d41\u7aef\u53e3\u8bbe\u7f6e0\u5219\u4f7f\u7528\u968f\u673a\u7aef\u53e3\n    if (port == null) {\n        param.put("port", 0);\n    }else {\n        param.put("port", port);\n    }\n    if (ssrc != 0) {\n        param.put("ssrc", ssrc);\n    }\n\n    JSONObject openRtpServerResultJson = zlmresTfulUtils.openRtpServer(mediaServerItem, param);\n    logger.info("\u521b\u5efaRTP Server \u53c2\u6570\uff1a{}", JSON.toJSONString(openRtpServerResultJson));\n    if (openRtpServerResultJson != null) {\n        if (openRtpServerResultJson.getInteger("code") == 0) {\n            result= openRtpServerResultJson.getInteger("port");\n        }else {\n            logger.error("\u521b\u5efaRTP Server \u5931\u8d25 {}: ", openRtpServerResultJson.getString("msg"));\n        }\n    }else {\n        //  \u68c0\u67e5ZLM\u72b6\u6001\n        logger.error("\u521b\u5efaRTP Server \u5931\u8d25 {}: \u8bf7\u68c0\u67e5ZLM\u670d\u52a1", param.get("port"));\n    }\n    return result;\n}\n'})}),"\n",(0,a.jsx)(n.mermaid,{value:"flowchart TD\n    Start[\u5f00\u59cb] --\x3e QueryRtpInfo[\u67e5\u8be2RTP\u670d\u52a1\u5668\u4fe1\u606f]\n    QueryRtpInfo --\x3e|\u8fd4\u56de\u7801\u4e3a0| CheckExist[\u68c0\u67e5\u670d\u52a1\u5668\u662f\u5426\u5b58\u5728]\n    CheckExist --\x3e|\u5b58\u5728| CheckPort[\u68c0\u67e5\u7aef\u53e3\u53f7\u662f\u5426\u4e3a0]\n    CheckPort --\x3e|\u7aef\u53e3\u53f7\u4e3a0| CloseServer[\u5173\u95edRTP\u670d\u52a1\u5668]\n    CloseServer --\x3e|\u5173\u95ed\u6210\u529f| Restart[\u9012\u5f52\u91cd\u542fRTP\u670d\u52a1\u5668]\n    CheckPort --\x3e|\u7aef\u53e3\u53f7\u4e0d\u4e3a0| ReturnPort[\u8fd4\u56de\u7aef\u53e3\u53f7]\n    CheckExist --\x3e|\u4e0d\u5b58\u5728| PrepareParams[\u51c6\u5907\u521b\u5efa\u53c2\u6570]\n    QueryRtpInfo --\x3e|\u8fd4\u56de\u7801\u4e3a-2| ReturnError[\u8fd4\u56de\u9519\u8bef\u503c]\n    PrepareParams --\x3e CreateServer[\u8c03\u7528\u521b\u5efaRTP\u670d\u52a1\u5668]\n    CreateServer --\x3e|\u521b\u5efa\u6210\u529f| ReturnPort\n    CreateServer --\x3e|\u521b\u5efa\u5931\u8d25| LogError[\u8bb0\u5f55\u9519\u8bef\u65e5\u5fd7]\n    LogError --\x3e End[\u7ed3\u675f]\n    ReturnPort --\x3e End\n    ReturnError --\x3e End\n"}),"\n",(0,a.jsxs)(n.h3,{id:"6--\u518d\u56de\u5230srcmainjavacomgbcomwvpvmpserviceimplplayserviceimpljava",children:["(6)  \u518d\u56de\u5230",(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/service/impl/PlayServiceImpl.java"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/service/impl/PlayServiceImpl.java"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"play(mediaServerItem, ssrcInfo, device, channelId, callback);\n"})}),"\n",(0,a.jsxs)(n.p,{children:["\u518d\u8c03\u7528\u540c\u6587\u4ef6\u4e2d\u7684play\u65b9\u6cd5\uff0c\u5176\u4e2d\u6838\u5fc3\u662f",(0,a.jsx)(n.code,{children:"cmder.playStreamCmd"}),"\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u91cc\u9762"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/service/impl/PlayServiceImpl.java"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Override\npublic void play(MediaServerItem mediaServerItem, SSRCInfo ssrcInfo, Device device, String channelId,\n                 ErrorCallback<Object> callback) {\n\n    if (mediaServerItem == null || ssrcInfo == null) {\n        callback.run(InviteErrorCode.ERROR_FOR_PARAMETER_ERROR.getCode(),\n                InviteErrorCode.ERROR_FOR_PARAMETER_ERROR.getMsg(),\n                null);\n        return;\n    }\n    logger.info("[\u70b9\u64ad\u5f00\u59cb] deviceId: {}, channelId: {},\u7801\u6d41\u7c7b\u578b\uff1a{}, \u6536\u6d41\u7aef\u53e3\uff1a {}, STREAM\uff1a{}, \u6536\u6d41\u6a21\u5f0f\uff1a{}, SSRC: {}, SSRC\u6821\u9a8c\uff1a{}",\n            device.getDeviceId(), channelId, device.isSwitchPrimarySubStream() ? "\u8f85\u7801\u6d41" : "\u4e3b\u7801\u6d41", ssrcInfo.getPort(), ssrcInfo.getStream(),\n            device.getStreamMode(), ssrcInfo.getSsrc(), device.isSsrcCheck());\n    //\u7aef\u53e3\u83b7\u53d6\u5931\u8d25\u7684ssrcInfo \u6ca1\u6709\u5fc5\u8981\u53d1\u9001\u70b9\u64ad\u6307\u4ee4\n    if (ssrcInfo.getPort() <= 0) {\n        logger.info("[\u70b9\u64ad\u7aef\u53e3\u5206\u914d\u5f02\u5e38]\uff0cdeviceId={},channelId={},ssrcInfo={}", device.getDeviceId(), channelId, ssrcInfo);\n        // \u91ca\u653essrc\n        mediaServerService.releaseSsrc(mediaServerItem.getId(), ssrcInfo.getSsrc());\n        streamSession.remove(device.getDeviceId(), channelId, ssrcInfo.getStream());\n\n        callback.run(InviteErrorCode.ERROR_FOR_RESOURCE_EXHAUSTION.getCode(), "\u70b9\u64ad\u7aef\u53e3\u5206\u914d\u5f02\u5e38", null);\n        inviteStreamService.call(InviteSessionType.PLAY, device.getDeviceId(), channelId, null,\n                InviteErrorCode.ERROR_FOR_RESOURCE_EXHAUSTION.getCode(), "\u70b9\u64ad\u7aef\u53e3\u5206\u914d\u5f02\u5e38", null);\n        return;\n    }\n\n    // \u521d\u59cb\u5316redis\u4e2d\u7684invite\u6d88\u606f\u72b6\u6001\n    InviteInfo inviteInfo = InviteInfo.getInviteInfo(device.getDeviceId(), channelId, ssrcInfo.getStream(), ssrcInfo,\n            mediaServerItem.getSdpIp(), ssrcInfo.getPort(), device.getStreamMode(), InviteSessionType.PLAY,\n            InviteSessionStatus.ready);\n    inviteInfo.setSubStream(device.isSwitchPrimarySubStream());\n    inviteStreamService.updateInviteInfo(inviteInfo);\n    // \u8d85\u65f6\u5904\u7406\n    String timeOutTaskKey = UUID.randomUUID().toString();\n    dynamicTask.startDelay(timeOutTaskKey, () -> {\n        // \u6267\u884c\u8d85\u65f6\u4efb\u52a1\u65f6\u67e5\u8be2\u662f\u5426\u5df2\u7ecf\u6210\u529f\uff0c\u6210\u529f\u4e86\u5219\u4e0d\u6267\u884c\u8d85\u65f6\u4efb\u52a1\uff0c\u9632\u6b62\u8d85\u65f6\u4efb\u52a1\u53d6\u6d88\u5931\u8d25\u7684\u60c5\u51b5\n        InviteInfo inviteInfoForTimeOut = inviteStreamService.getInviteInfoByDeviceAndChannel(InviteSessionType.PLAY, device.getDeviceId(), channelId);\n        if (inviteInfoForTimeOut == null || inviteInfoForTimeOut.getStreamInfo() == null) {\n            logger.info("[\u70b9\u64ad\u8d85\u65f6] \u6536\u6d41\u8d85\u65f6 deviceId: {}, channelId: {},\u7801\u6d41\u7c7b\u578b\uff1a{}\uff0c\u7aef\u53e3\uff1a{}, SSRC: {}",\n                    device.getDeviceId(), channelId, device.isSwitchPrimarySubStream() ? "\u8f85\u7801\u6d41" : "\u4e3b\u7801\u6d41",\n                    ssrcInfo.getPort(), ssrcInfo.getSsrc());\n\n            callback.run(InviteErrorCode.ERROR_FOR_STREAM_TIMEOUT.getCode(), InviteErrorCode.ERROR_FOR_STREAM_TIMEOUT.getMsg(), null);\n            inviteStreamService.call(InviteSessionType.PLAY, device.getDeviceId(), channelId, null,\n                    InviteErrorCode.ERROR_FOR_STREAM_TIMEOUT.getCode(), InviteErrorCode.ERROR_FOR_STREAM_TIMEOUT.getMsg(), null);\n            inviteStreamService.removeInviteInfoByDeviceAndChannel(InviteSessionType.PLAY, device.getDeviceId(), channelId);\n\n            try {\n                cmder.streamByeCmd(device, channelId, ssrcInfo.getStream(), null);\n            } catch (InvalidArgumentException | ParseException | SipException | SsrcTransactionNotFoundException e) {\n                logger.error("[\u70b9\u64ad\u8d85\u65f6]\uff0c \u53d1\u9001BYE\u5931\u8d25 {}", e.getMessage());\n            } finally {\n                mediaServerService.releaseSsrc(mediaServerItem.getId(), ssrcInfo.getSsrc());\n                mediaServerService.closeRTPServer(mediaServerItem, ssrcInfo.getStream());\n                streamSession.remove(device.getDeviceId(), channelId, ssrcInfo.getStream());\n                mediaServerService.closeRTPServer(mediaServerItem, ssrcInfo.getStream());\n                // \u53d6\u6d88\u8ba2\u9605\u6d88\u606f\u76d1\u542c\n                HookSubscribeForStreamChange hookSubscribe = HookSubscribeFactory.on_stream_changed("rtp", ssrcInfo.getStream(), true, "rtsp", mediaServerItem.getId());\n                subscribe.removeSubscribe(hookSubscribe);\n            }\n        }\n    }, userSetting.getPlayTimeout());\n\n    try {\n        cmder.playStreamCmd(mediaServerItem, ssrcInfo, device, channelId, (mediaServerItemInuse, hookParam ) -> {\n            logger.info("\u6536\u5230\u8ba2\u9605\u6d88\u606f\uff1a " + hookParam);\n            dynamicTask.stop(timeOutTaskKey);\n            // hook\u54cd\u5e94\n            StreamInfo streamInfo = onPublishHandlerForPlay(mediaServerItemInuse, hookParam, device.getDeviceId(), channelId);\n            if (streamInfo == null){\n                callback.run(InviteErrorCode.ERROR_FOR_STREAM_PARSING_EXCEPTIONS.getCode(),\n                        InviteErrorCode.ERROR_FOR_STREAM_PARSING_EXCEPTIONS.getMsg(), null);\n                inviteStreamService.call(InviteSessionType.PLAY, device.getDeviceId(), channelId, null,\n                        InviteErrorCode.ERROR_FOR_STREAM_PARSING_EXCEPTIONS.getCode(),\n                        InviteErrorCode.ERROR_FOR_STREAM_PARSING_EXCEPTIONS.getMsg(), null);\n                return;\n            }\n            callback.run(InviteErrorCode.SUCCESS.getCode(), InviteErrorCode.SUCCESS.getMsg(), streamInfo);\n            inviteStreamService.call(InviteSessionType.PLAY, device.getDeviceId(), channelId, null,\n                    InviteErrorCode.SUCCESS.getCode(),\n                    InviteErrorCode.SUCCESS.getMsg(),\n                    streamInfo);\n            logger.info("[\u70b9\u64ad\u6210\u529f] deviceId: {}, channelId:{}, \u7801\u6d41\u7c7b\u578b\uff1a{}", device.getDeviceId(), channelId,\n                    device.isSwitchPrimarySubStream() ? "\u8f85\u7801\u6d41" : "\u4e3b\u7801\u6d41");\n            snapOnPlay(mediaServerItemInuse, device.getDeviceId(), channelId, ssrcInfo.getStream());\n\n        }, (eventResult) -> {\n            // \u5904\u7406\u6536\u5230200ok\u540e\u7684TCP\u4e3b\u52a8\u8fde\u63a5\u4ee5\u53caSSRC\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\n            InviteOKHandler(eventResult, ssrcInfo, mediaServerItem, device, channelId,\n                    timeOutTaskKey, callback, inviteInfo, InviteSessionType.PLAY);\n        }, (event) -> {\n            dynamicTask.stop(timeOutTaskKey);\n            mediaServerService.closeRTPServer(mediaServerItem, ssrcInfo.getStream());\n            // \u91ca\u653essrc\n            mediaServerService.releaseSsrc(mediaServerItem.getId(), ssrcInfo.getSsrc());\n\n            streamSession.remove(device.getDeviceId(), channelId, ssrcInfo.getStream());\n\n            callback.run(InviteErrorCode.ERROR_FOR_SIGNALLING_ERROR.getCode(),\n                    String.format("\u70b9\u64ad\u5931\u8d25\uff0c \u9519\u8bef\u7801\uff1a %s, %s", event.statusCode, event.msg), null);\n            inviteStreamService.call(InviteSessionType.PLAY, device.getDeviceId(), channelId, null,\n                    InviteErrorCode.ERROR_FOR_RESET_SSRC.getCode(),\n                    String.format("\u70b9\u64ad\u5931\u8d25\uff0c \u9519\u8bef\u7801\uff1a %s, %s", event.statusCode, event.msg), null);\n\n            inviteStreamService.removeInviteInfoByDeviceAndChannel(InviteSessionType.PLAY, device.getDeviceId(), channelId);\n        });\n    } catch (InvalidArgumentException | SipException | ParseException e) {\n\n        logger.error("[\u547d\u4ee4\u53d1\u9001\u5931\u8d25] \u70b9\u64ad\u6d88\u606f: {}", e.getMessage());\n        dynamicTask.stop(timeOutTaskKey);\n        mediaServerService.closeRTPServer(mediaServerItem, ssrcInfo.getStream());\n        // \u91ca\u653essrc\n        mediaServerService.releaseSsrc(mediaServerItem.getId(), ssrcInfo.getSsrc());\n\n        streamSession.remove(device.getDeviceId(), channelId, ssrcInfo.getStream());\n\n        callback.run(InviteErrorCode.ERROR_FOR_SIP_SENDING_FAILED.getCode(),\n                InviteErrorCode.ERROR_FOR_SIP_SENDING_FAILED.getMsg(), null);\n        inviteStreamService.call(InviteSessionType.PLAY, device.getDeviceId(), channelId, null,\n                InviteErrorCode.ERROR_FOR_SIP_SENDING_FAILED.getCode(),\n                InviteErrorCode.ERROR_FOR_SIP_SENDING_FAILED.getMsg(), null);\n\n        inviteStreamService.removeInviteInfoByDeviceAndChannel(InviteSessionType.PLAY, device.getDeviceId(), channelId);\n    }\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u4ee5\u4e0a\u7684\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\u5e95\u5c42\u8c03\u7528\u4e86playStreamCmd\u8fd9\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f20\u5165\u7684\u6700\u540e\u4e09\u4e2a\u53c2\u6570\u5bf9\u5e94\u4e86\u4e09\u79cd\u56de\u8c03\u51fd\u6570\uff1a\u6210\u529f\u3001\u6536\u5230200OK\u54cd\u5e94\u3001\u5931\u8d25\u3002"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/service/impl/PlayServiceImpl.java"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'cmder.playStreamCmd(mediaServerItem, ssrcInfo, device, channelId, (mediaServerItemInuse, hookParam ) -> {\n            logger.info("\u6536\u5230\u8ba2\u9605\u6d88\u606f\uff1a " + hookParam);\n            dynamicTask.stop(timeOutTaskKey);\n            // hook\u54cd\u5e94\n            StreamInfo streamInfo = onPublishHandlerForPlay(mediaServerItemInuse, hookParam, device.getDeviceId(), channelId);\n            if (streamInfo == null){\n                callback.run(InviteErrorCode.ERROR_FOR_STREAM_PARSING_EXCEPTIONS.getCode(),\n                        InviteErrorCode.ERROR_FOR_STREAM_PARSING_EXCEPTIONS.getMsg(), null);\n                inviteStreamService.call(InviteSessionType.PLAY, device.getDeviceId(), channelId, null,\n                        InviteErrorCode.ERROR_FOR_STREAM_PARSING_EXCEPTIONS.getCode(),\n                        InviteErrorCode.ERROR_FOR_STREAM_PARSING_EXCEPTIONS.getMsg(), null);\n                return;\n            }\n            callback.run(InviteErrorCode.SUCCESS.getCode(), InviteErrorCode.SUCCESS.getMsg(), streamInfo);\n            inviteStreamService.call(InviteSessionType.PLAY, device.getDeviceId(), channelId, null,\n                    InviteErrorCode.SUCCESS.getCode(),\n                    InviteErrorCode.SUCCESS.getMsg(),\n                    streamInfo);\n            logger.info("[\u70b9\u64ad\u6210\u529f] deviceId: {}, channelId:{}, \u7801\u6d41\u7c7b\u578b\uff1a{}", device.getDeviceId(), channelId,\n                    device.isSwitchPrimarySubStream() ? "\u8f85\u7801\u6d41" : "\u4e3b\u7801\u6d41");\n            snapOnPlay(mediaServerItemInuse, device.getDeviceId(), channelId, ssrcInfo.getStream());\n\n        }, (eventResult) -> {\n            // \u5904\u7406\u6536\u5230200ok\u540e\u7684TCP\u4e3b\u52a8\u8fde\u63a5\u4ee5\u53caSSRC\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\n            InviteOKHandler(eventResult, ssrcInfo, mediaServerItem, device, channelId,\n                    timeOutTaskKey, callback, inviteInfo, InviteSessionType.PLAY);\n        }, (event) -> {\n            dynamicTask.stop(timeOutTaskKey);\n            mediaServerService.closeRTPServer(mediaServerItem, ssrcInfo.getStream());\n            // \u91ca\u653essrc\n            mediaServerService.releaseSsrc(mediaServerItem.getId(), ssrcInfo.getSsrc());\n\n            streamSession.remove(device.getDeviceId(), channelId, ssrcInfo.getStream());\n\n            callback.run(InviteErrorCode.ERROR_FOR_SIGNALLING_ERROR.getCode(),\n                    String.format("\u70b9\u64ad\u5931\u8d25\uff0c \u9519\u8bef\u7801\uff1a %s, %s", event.statusCode, event.msg), null);\n            inviteStreamService.call(InviteSessionType.PLAY, device.getDeviceId(), channelId, null,\n                    InviteErrorCode.ERROR_FOR_RESET_SSRC.getCode(),\n                    String.format("\u70b9\u64ad\u5931\u8d25\uff0c \u9519\u8bef\u7801\uff1a %s, %s", event.statusCode, event.msg), null);\n\n            inviteStreamService.removeInviteInfoByDeviceAndChannel(InviteSessionType.PLAY, device.getDeviceId(), channelId);\n        });\n'})}),"\n",(0,a.jsx)(n.mermaid,{value:"flowchart TD\n    Start[\u5f00\u59cb\u70b9\u64ad] --\x3e SendCmd[\u53d1\u9001\u70b9\u64ad\u547d\u4ee4]\n    SendCmd --\x3e|\u6210\u529f\u56de\u8c03| HandleSuccess[\u5904\u7406\u6d41\u4fe1\u606f\u5e76\u901a\u77e5\u6210\u529f]\n    HandleSuccess --\x3e Snap[\u89e6\u53d1\u622a\u56fe\u64cd\u4f5c]\n    SendCmd --\x3e|\u6536\u5230200OK| Handle200OK[\u5904\u7406SSRC\u6216TCP\u8fde\u63a5]\n    SendCmd --\x3e|\u5931\u8d25\u56de\u8c03| HandleFailure[\u91ca\u653e\u8d44\u6e90\u5e76\u901a\u77e5\u5931\u8d25]\n    Handle200OK --\x3e|SSRC\u4e0d\u4e00\u81f4| UpdateSSRC[\u66f4\u65b0SSRC\u5e76\u91cd\u8bd5]\n    Handle200OK --\x3e|TCP\u8fde\u63a5| ConnectTCP[\u5c1d\u8bd5TCP\u4e3b\u52a8\u8fde\u63a5]\n    HandleFailure --\x3e End[\u7ed3\u675f]\n    Snap --\x3e End\n    UpdateSSRC --\x3e End\n    ConnectTCP --\x3e End\n"}),"\n",(0,a.jsxs)(n.p,{children:["\u4ee5\u4e0b\u4e3a\u4e0a\u9762\u8c03\u7528\u51fd\u6570\u7684\u4ee3\u7801\uff1a**",(0,a.jsx)(n.code,{children:"sipSender.transmitRequest"}),"**\u8fd9\u4e00\u884c\u4ee3\u7801\uff0c\u53bb\u6267\u884c\u4e86\u53d1\u9001sip\u8bf7\u6c42\u7684\u51fd\u6570,\uff0c\u5e76\u4e14\u6267\u884c\u6210\u529f\u7684\u56de\u8c03\u51fd\u6570\uff0cokEvent"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"src/main/java/com/gbcom/wvp/vmp/gb28181/transmit/cmd/impl/SIPCommander.java"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'sipSender.transmitRequest(sipLayer.getLocalIp(device.getLocalIp()), request, (e -> {\n            streamSession.remove(device.getDeviceId(), channelId, ssrcInfo.getStream());\n            mediaServerService.releaseSsrc(mediaServerItem.getId(), ssrcInfo.getSsrc());\n            errorEvent.response(e);\n        }), e -> {\n            ResponseEvent responseEvent = (ResponseEvent) e.event;\n            SIPResponse response = (SIPResponse) responseEvent.getResponse();\n            streamSession.put(device.getDeviceId(), channelId, "play", stream, ssrcInfo.getSsrc(), mediaServerItem.getId(), response,\n                    InviteSessionType.PLAY);\n            okEvent.response(e);\n        });\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'/**\n     * \u8bf7\u6c42\u9884\u89c8\u89c6\u9891\u6d41\n     *\n     * @param device     \u89c6\u9891\u8bbe\u5907\n     * @param channelId  \u9884\u89c8\u901a\u9053\n     * @param event      hook\u8ba2\u9605\n     * @param errorEvent sip\u9519\u8bef\u8ba2\u9605\n     */\n    @Override\n    public void playStreamCmd(MediaServerItem mediaServerItem, SSRCInfo ssrcInfo, Device device, String channelId,\n                              ZlmHttpHookSubscribe.Event event, SipSubscribe.Event okEvent, SipSubscribe.Event errorEvent) throws InvalidArgumentException, SipException, ParseException {\n        String stream = ssrcInfo.getStream();\n\n        if (device == null) {\n            return;\n        }\n\n        logger.info("{} \u5206\u914d\u7684ZLM\u4e3a: {} [{}:{}]", stream, mediaServerItem.getId(), mediaServerItem.getSdpIp(), ssrcInfo.getPort());\n        HookSubscribeForStreamChange hookSubscribe = HookSubscribeFactory.on_stream_changed("rtp", stream, true, "rtsp", mediaServerItem.getId());\n        subscribe.addSubscribe(hookSubscribe, (MediaServerItem mediaServerItemInUse, HookParam hookParam) -> {\n            if (event != null) {\n                event.response(mediaServerItemInUse, hookParam);\n                subscribe.removeSubscribe(hookSubscribe);\n            }\n        });\n        String sdpIp;\n        if (!ObjectUtils.isEmpty(device.getSdpIp())) {\n            sdpIp = device.getSdpIp();\n        }else {\n            sdpIp = mediaServerItem.getSdpIp();\n        }\n        StringBuffer content = new StringBuffer(200);\n        content.append("v=0\\r\\n");\n        content.append("o=" + channelId + " 0 0 IN IP4 " + sdpIp + "\\r\\n");\n        content.append("s=Play\\r\\n");\n        content.append("c=IN IP4 " + sdpIp + "\\r\\n");\n        content.append("t=0 0\\r\\n");\n\n        if (userSetting.isSeniorSdp()) {\n            if ("TCP-PASSIVE".equalsIgnoreCase(device.getStreamMode())) {\n                content.append("m=video " + ssrcInfo.getPort() + " TCP/RTP/AVP 96 126 125 99 34 98 97\\r\\n");\n            } else if ("TCP-ACTIVE".equalsIgnoreCase(device.getStreamMode())) {\n                content.append("m=video " + ssrcInfo.getPort() + " TCP/RTP/AVP 96 126 125 99 34 98 97\\r\\n");\n            } else if ("UDP".equalsIgnoreCase(device.getStreamMode())) {\n                content.append("m=video " + ssrcInfo.getPort() + " RTP/AVP 96 126 125 99 34 98 97\\r\\n");\n            }\n            content.append("a=recvonly\\r\\n");\n            content.append("a=rtpmap:96 PS/90000\\r\\n");\n            content.append("a=fmtp:126 profile-level-id=42e01e\\r\\n");\n            content.append("a=rtpmap:126 H264/90000\\r\\n");\n            content.append("a=rtpmap:125 H264S/90000\\r\\n");\n            content.append("a=fmtp:125 profile-level-id=42e01e\\r\\n");\n            content.append("a=rtpmap:99 H265/90000\\r\\n");\n            content.append("a=rtpmap:98 H264/90000\\r\\n");\n            content.append("a=rtpmap:97 MPEG4/90000\\r\\n");\n            if ("TCP-PASSIVE".equalsIgnoreCase(device.getStreamMode())) { // tcp\u88ab\u52a8\u6a21\u5f0f\n                content.append("a=setup:passive\\r\\n");\n                content.append("a=connection:new\\r\\n");\n            } else if ("TCP-ACTIVE".equalsIgnoreCase(device.getStreamMode())) { // tcp\u4e3b\u52a8\u6a21\u5f0f\n                content.append("a=setup:active\\r\\n");\n                content.append("a=connection:new\\r\\n");\n            }\n        } else {\n            if ("TCP-PASSIVE".equalsIgnoreCase(device.getStreamMode())) {\n                content.append("m=video " + ssrcInfo.getPort() + " TCP/RTP/AVP 96 97 98 99\\r\\n");\n            } else if ("TCP-ACTIVE".equalsIgnoreCase(device.getStreamMode())) {\n                content.append("m=video " + ssrcInfo.getPort() + " TCP/RTP/AVP 96 97 98 99\\r\\n");\n            } else if ("UDP".equalsIgnoreCase(device.getStreamMode())) {\n                content.append("m=video " + ssrcInfo.getPort() + " RTP/AVP 96 97 98 99\\r\\n");\n            }\n            content.append("a=recvonly\\r\\n");\n            content.append("a=rtpmap:96 PS/90000\\r\\n");\n            content.append("a=rtpmap:98 H264/90000\\r\\n");\n            content.append("a=rtpmap:97 MPEG4/90000\\r\\n");\n            content.append("a=rtpmap:99 H265/90000\\r\\n");\n            if ("TCP-PASSIVE".equalsIgnoreCase(device.getStreamMode())) { // tcp\u88ab\u52a8\u6a21\u5f0f\n                content.append("a=setup:passive\\r\\n");\n                content.append("a=connection:new\\r\\n");\n            } else if ("TCP-ACTIVE".equalsIgnoreCase(device.getStreamMode())) { // tcp\u4e3b\u52a8\u6a21\u5f0f\n                content.append("a=setup:active\\r\\n");\n                content.append("a=connection:new\\r\\n");\n            }\n        }\n\n        if( device.isSwitchPrimarySubStream() ){\n            if("TP-LINK".equals(device.getManufacturer())){\n                if (device.isSwitchPrimarySubStream()){\n                    content.append("a=streamMode:sub\\r\\n");\n                }else {\n                    content.append("a=streamMode:main\\r\\n");\n                }\n            }else {\n                if (device.isSwitchPrimarySubStream()){\n                    content.append("a=streamprofile:1\\r\\n");\n                }else {\n                    content.append("a=streamprofile:0\\r\\n");\n                }\n            }\n        }\n\n        content.append("y=" + ssrcInfo.getSsrc() + "\\r\\n");//ssrc\n        // f\u5b57\u6bb5:f= v/\u7f16\u7801\u683c\u5f0f/\u5206\u8fa8\u7387/\u5e27\u7387/\u7801\u7387\u7c7b\u578b/\u7801\u7387\u5927\u5c0fa/\u7f16\u7801\u683c\u5f0f/\u7801\u7387\u5927\u5c0f/\u91c7\u6837\u7387\n//        content.append("f=v/2/5/25/1/4000a/1/8/1" + "\\r\\n"); // \u672a\u53d1\u73b0\u652f\u6301\u6b64\u7279\u6027\u7684\u8bbe\u5907\n\n        //\u8fd9\u91cc\u83b7\u53d6\u7684userId \u503c\n        String fromTag = mediaServerItem.getUserId();\n        if(ObjectUtils.isEmpty(fromTag)){\n            fromTag = SipUtils.getNewFromTag();\n        }\n        Request request = headerProvider.createInviteRequest(device, channelId, content.toString(), SipUtils.getNewViaTag(), fromTag, null, ssrcInfo.getSsrc(),sipSender.getNewCallIdHeader(sipLayer.getLocalIp(device.getLocalIp()),device.getTransport()));\n        sipSender.transmitRequest(sipLayer.getLocalIp(device.getLocalIp()), request, (e -> {\n            streamSession.remove(device.getDeviceId(), channelId, ssrcInfo.getStream());\n            mediaServerService.releaseSsrc(mediaServerItem.getId(), ssrcInfo.getSsrc());\n            errorEvent.response(e);\n        }), e -> {\n            ResponseEvent responseEvent = (ResponseEvent) e.event;\n            SIPResponse response = (SIPResponse) responseEvent.getResponse();\n            streamSession.put(device.getDeviceId(), channelId, "play", stream, ssrcInfo.getSsrc(), mediaServerItem.getId(), response,\n                    InviteSessionType.PLAY);\n            okEvent.response(e);\n        });\n    }\n'})}),"\n",(0,a.jsx)(n.mermaid,{value:"flowchart TD\n    Start[\u5f00\u59cb] --\x3e CheckDevice[\u68c0\u67e5\u8bbe\u5907\u662f\u5426\u5b58\u5728]\n    CheckDevice --\x3e|Yes| CreateHook[\u521b\u5efa\u6d41\u53d8\u66f4hook\u8ba2\u9605]\n    CreateHook --\x3e BuildSDP[\u6784\u9020SDP\u5185\u5bb9]\n    BuildSDP --\x3e GenerateSIP[\u751f\u6210SIP INVITE\u8bf7\u6c42]\n    GenerateSIP --\x3e SendRequest[\u53d1\u9001SIP\u8bf7\u6c42]\n    SendRequest --\x3e|Success| HandleSuccess[\u5904\u7406\u6210\u529f\u56de\u8c03]\n    SendRequest --\x3e|Failure| HandleFailure[\u5904\u7406\u5931\u8d25\u56de\u8c03]\n    HandleSuccess --\x3e End[\u7ed3\u675f]\n    HandleFailure --\x3e End\n    CheckDevice --\x3e|No| End\n"}),"\n",(0,a.jsx)(n.h1,{id:"\u53c2\u8003",children:"\u53c2\u8003\uff1a"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"\u53d1\u9001http \u70b9\u64ad\u8bf7\u6c42"}),"\n",(0,a.jsx)(n.li,{children:"\u4e1a\u52a1\u670d\u52a1\u5668\u6536\u5230\u70b9\u64ad\u8bf7\u6c42\uff0c\u4f7f\u7528sip\u534f\u8bae\u53d1\u9001invite(\u643a\u5e26SDP\u6d88\u606f\u4f53)"}),"\n",(0,a.jsx)(n.li,{children:"\u8bbe\u5907\u6536\u5230invite \u4e4b\u540e\u56de\u590d200 ok (\u643a\u5e26SDP\u6d88\u606f\u4f53)"}),"\n",(0,a.jsx)(n.li,{children:"\u4e1a\u52a1\u670d\u52a1\u5668\u6536\u5230200 ok\uff0c\u4f7f\u7528sip \u534f\u8bae\u53d1\u9001ACK\u5230\u8bbe\u5907"}),"\n",(0,a.jsx)(n.li,{children:"\u8bbe\u5907\u6536\u5230ACK\u4e4b\u540e\u5c31\u5f80ZLM\u5a92\u4f53\u670d\u52a1\u5668\u63a8\u9001\u5a92\u4f53\u6d41\u5305\u542b\u97f3\u9891\u7684"}),"\n",(0,a.jsx)(n.li,{children:"\u4e1a\u52a1\u670d\u52a1\u5668\u7684hook on_stream_change \u76d1\u542c\u4e8b\u4ef6\u6536\u5230zlm\u8fd4\u56de\u7684\u64ad\u653e\u5730\u5740"}),"\n",(0,a.jsx)(n.li,{children:"\u4e1a\u52a1\u670d\u52a1\u5668\u5c06\u5730\u5740\u7ec4\u88c5\u5e76\u5f02\u6b65\u8fd4\u56de\u5230\u6d4f\u89c8\u5668"}),"\n",(0,a.jsx)(n.li,{children:"\u6d4f\u89c8\u5668\u62ff\u5230\u64ad\u653e\u5730\u5740\uff0c\u9009\u62e9\u5408\u9002\u7684\u5730\u5740\u8fdb\u884c\u6e32\u67d3"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image-20250414173514443",src:r(63408).A+"",width:"902",height:"595"})}),"\n",(0,a.jsx)(n.h1,{id:"q--a",children:"Q & A"}),"\n",(0,a.jsx)(n.p,{children:"1.\u5176\u4e2d\u7684devideId\u548cChannelId\u662f\u5e72\u4ec0\u4e48\u7684\uff1f"}),"\n",(0,a.jsx)(n.p,{children:"2.\u4e3a\u4ec0\u4e48redis\u7528\u4e86\u4e24\u4e2a\u5e93\uff0c\u4e00\u4e2adb6\uff0c\u4e00\u4e2adb7\uff0c\u9ed8\u8ba4\u914d\u7f6e\u7684\u7d22\u5f15\u597d\u50cf\u662f7"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"redis:\n  # \u6570\u636e\u5e93\u7d22\u5f15\uff0c\u9ed8\u8ba40\n  database: 7\n  #    # \u670d\u52a1\u5668IP\u5730\u5740\n  host: 127.0.0.1\n  #    # \u8fde\u63a5\u7aef\u53e3\n  port: 5700\n  #    # Redis\u670d\u52a1\u5668\u8fde\u63a5\u5bc6\u7801\uff08\u9ed8\u8ba4\u4e3a\u7a7a\uff09\n  password: gbcom@gidata@123\n"})}),"\n",(0,a.jsx)(n.p,{children:"3.zlm\u5a92\u4f53\u670d\u52a1\u5668\u76f8\u5173\u7684\u8bbe\u5907\u4fe1\u606f\uff0c\u662f\u600e\u4e48\u653e\u5230redis\u4e2d\u53bb\u7684\uff0c\u4e00\u542f\u52a8\u5c31\u5148\u653e\u5230redis\u4e2d\u53bb\u5417\uff1f"}),"\n",(0,a.jsx)(n.p,{children:"4.\u5f02\u6b65\uff0cDeferredResult\uff0c\u8fd9\u4e2a\u662f\u600e\u4e48\u5199\u7684\uff1f"}),"\n",(0,a.jsx)(n.p,{children:"5.isSsrcCheck\u8fd9\u4e2a\u662f\u5e72\u4ec0\u4e48\u7684\uff1f"}),"\n",(0,a.jsx)(n.p,{children:"6.SN\u53c8\u662f\u4ec0\u4e48\u4e1c\u897f\uff1f\u6211\u9760\u83b7\u53d6mediaServer\u53ef\u7528\u7684ssrc\uff1f"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"ssrc"}),' \u662f "Synchronization Source Identifier" \u7684\u7f29\u5199\uff0c\u901a\u5e38\u7528\u4e8e RTP\uff08\u5b9e\u65f6\u4f20\u8f93\u534f\u8bae\uff09\u4e2d\u6807\u8bc6\u6570\u636e\u6d41\u7684\u6765\u6e90\u3002\u5728\u89c6\u9891\u6d41\u5a92\u4f53\u573a\u666f\u4e2d\uff0c',(0,a.jsx)(n.code,{children:"ssrc"})," \u662f\u4e00\u4e2a\u552f\u4e00\u7684\u6570\u503c\uff0c\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u7684\u97f3\u89c6\u9891\u6d41\u3002"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["\u5982\u679c\u4f20\u5165\u4e86 ",(0,a.jsx)(n.code,{children:"presetSsrc"}),"\uff08\u9884\u8bbe\u7684 ",(0,a.jsx)(n.code,{children:"ssrc"}),"\uff09\uff0c\u5219\u76f4\u63a5\u4f7f\u7528\u5b83\u3002"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"\u5982\u679c\u6ca1\u6709\u9884\u8bbe\u503c\uff1a"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\u5982\u679c\u662f\u56de\u653e\u6d41\uff08",(0,a.jsx)(n.code,{children:"isPlayback == true"}),"\uff09\uff0c\u8c03\u7528 ",(0,a.jsx)(n.code,{children:"ssrcFactory.getPlayBackSsrc(mediaServerItem.getId())"})," \u83b7\u53d6\u56de\u653e\u6d41\u7684 ",(0,a.jsx)(n.code,{children:"ssrc"}),"\u3002"]}),"\n",(0,a.jsxs)(n.li,{children:["\u5982\u679c\u662f\u666e\u901a\u64ad\u653e\u6d41\uff0c\u8c03\u7528 ",(0,a.jsx)(n.code,{children:"ssrcFactory.getPlaySsrc(mediaServerItem.getId())"})," \u83b7\u53d6\u64ad\u653e\u6d41\u7684 ",(0,a.jsx)(n.code,{children:"ssrc"}),"\u3002"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"ssrc"})," \u7684\u4f5c\u7528\u662f\u786e\u4fdd\u6bcf\u4e2a\u5a92\u4f53\u6d41\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u6709\u552f\u4e00\u6807\u8bc6\uff0c\u907f\u514d\u6df7\u6dc6\u3002"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h1,{id:"todo",children:"TODO"}),"\n",(0,a.jsx)(n.p,{children:"\u540e\u7eed\u770b\u4e00\u4e0bJWT\u7684\u4ee3\u7801"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image-20250414173737574",src:r(40942).A+"",width:"777",height:"422"})}),"\n",(0,a.jsx)(n.h1,{id:"\u9644\u5f55",children:"\u9644\u5f55"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"\u524d\u7aef\u4ee3\u7801\u7ed3\u6784"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"\u251c\u2500api\n\u2502  \u2514\u2500system\n\u2502      \u251c\u2500access\n\u2502      \u251c\u2500account\n\u2502      \u251c\u2500alarmArea\n\u2502      \u251c\u2500android\n\u2502      \u251c\u2500channel\n\u2502      \u251c\u2500communication\n\u2502      \u251c\u2500config\n\u2502      \u251c\u2500control\n\u2502      \u251c\u2500device\n\u2502      \u251c\u2500dict\n\u2502      \u251c\u2500gbWhiteDeviceList\n\u2502      \u251c\u2500im\n\u2502      \u251c\u2500lisence\n\u2502      \u251c\u2500log\n\u2502      \u251c\u2500media\n\u2502      \u251c\u2500meshNarrowband\n\u2502      \u251c\u2500meshNarrowbandPdt\n\u2502      \u251c\u2500meshT\n\u2502      \u251c\u2500model\n\u2502      \u251c\u2500neighbor\n\u2502      \u251c\u2500nmiServer\n\u2502      \u251c\u2500operator\n\u2502      \u251c\u2500parentplatform\n\u2502      \u251c\u2500playVideo\n\u2502      \u251c\u2500proxy\n\u2502      \u251c\u2500pushVideoList\n\u2502      \u251c\u2500record\n\u2502      \u251c\u2500regional\n\u2502      \u251c\u2500role\n\u2502      \u251c\u2500space\n\u2502      \u251c\u2500streamProxy\n\u2502      \u251c\u2500student\n\u2502      \u251c\u2500tag\n\u2502      \u251c\u2500triggers\n\u2502      \u251c\u2500upgrade\n\u2502      \u251c\u2500webrtc\n\u2502      \u251c\u2500wvp\n\u2502      \u2514\u2500zlm\n\u251c\u2500assets\n\u2502  \u251c\u2500httpsauthoriza\n\u2502  \u251c\u2500icons\n\u2502  \u251c\u2500im\n\u2502  \u251c\u2500images\n\u2502  \u251c\u2500lmap\n\u2502  \u2502  \u251c\u2500icons\n\u2502  \u2502  \u2514\u2500newicons\n\u2502  \u251c\u2500mesh\n\u2502  \u251c\u2500music\n\u2502  \u251c\u2500newUI\n\u2502  \u2514\u2500wvp\n\u251c\u2500components\n\u2502  \u251c\u2500a-account-upload\n\u2502  \u251c\u2500a-android-off-gis\n\u2502  \u2502  \u2514\u2500components\n\u2502  \u251c\u2500a-android-off-map\n\u2502  \u2502  \u251c\u2500alarm\n\u2502  \u2502  \u2514\u2500components\n\u2502  \u251c\u2500a-custom-modal\n\u2502  \u251c\u2500a-h5live-play\n\u2502  \u251c\u2500a-live-jessibuca\n\u2502  \u251c\u2500a-offline-map\n\u2502  \u2502  \u2514\u2500components\n\u2502  \u251c\u2500a-play-jessibuca\n\u2502  \u251c\u2500a-play-rtc\n\u2502  \u251c\u2500a-play-video\n\u2502  \u251c\u2500a-regional-tree\n\u2502  \u251c\u2500a-rtc-player\n\u2502  \u251c\u2500a-screen-player\n\u2502  \u251c\u2500a-select-pattern\n\u2502  \u251c\u2500a-slider-tree\n\u2502  \u251c\u2500a-slider-tree-right\n\u2502  \u251c\u2500a-speak-icon\n\u2502  \u251c\u2500a-switch-modal\n\u2502  \u251c\u2500a-switch-modalForGbDev\n\u2502  \u251c\u2500a-take-photo\n\u2502  \u251c\u2500a-talk-icon\n\u2502  \u251c\u2500a-video-player\n\u2502  \u251c\u2500alarm-area-screen-shot-off-map\n\u2502  \u251c\u2500button\n\u2502  \u2502  \u2514\u2500styles\n\u2502  \u251c\u2500context-menu\n\u2502  \u251c\u2500device-info\n\u2502  \u2502  \u2514\u2500newInfos\n\u2502  \u251c\u2500device-ip\n\u2502  \u251c\u2500device-video-ip\n\u2502  \u251c\u2500dynamic-table\n\u2502  \u2502  \u251c\u2500components\n\u2502  \u2502  \u2502  \u2514\u2500tool-bar\n\u2502  \u2502  \u251c\u2500types\n\u2502  \u2502  \u2514\u2500utils\n\u2502  \u251c\u2500dynamic-table-for-user\n\u2502  \u2502  \u251c\u2500components\n\u2502  \u2502  \u2502  \u2514\u2500tool-bar\n\u2502  \u2502  \u251c\u2500types\n\u2502  \u2502  \u2514\u2500utils\n\u2502  \u251c\u2500gps-map\n\u2502  \u251c\u2500https-authorization-modal\n\u2502  \u251c\u2500iconfont\n\u2502  \u251c\u2500JSON-schema-form\n\u2502  \u2502  \u2514\u2500components\n\u2502  \u251c\u2500lockscreen\n\u2502  \u251c\u2500operate-row\n\u2502  \u251c\u2500photo\n\u2502  \u2502  \u2514\u2500cover\n\u2502  \u251c\u2500play-jessibuca\n\u2502  \u251c\u2500play-modal\n\u2502  \u251c\u2500play-webrtc\n\u2502  \u251c\u2500play-webrtc-div\n\u2502  \u251c\u2500ptt-switch-modal\n\u2502  \u251c\u2500pwdLevel\n\u2502  \u251c\u2500radioSex\n\u2502  \u251c\u2500record-index\n\u2502  \u251c\u2500split-panel\n\u2502  \u251c\u2500subscribe-details\n\u2502  \u251c\u2500svg-icon\n\u2502  \u251c\u2500tag-icon\n\u2502  \u251c\u2500tag-modal\n\u2502  \u251c\u2500transition\n\u2502  \u2514\u2500userType\n\u251c\u2500directives\n\u251c\u2500enums\n\u251c\u2500hooks\n\u2502  \u251c\u2500functions\n\u2502  \u251c\u2500useFormModal\n\u2502  \u2514\u2500useVolume\n\u251c\u2500layout\n\u2502  \u251c\u2500footer\n\u2502  \u251c\u2500header\n\u2502  \u251c\u2500logo\n\u2502  \u251c\u2500menu\n\u2502  \u251c\u2500menu-right\n\u2502  \u251c\u2500sider-tree\n\u2502  \u2514\u2500tabs\n\u251c\u2500lib\n\u2502  \u251c\u2500eventbus\n\u2502  \u251c\u2500h5live\n\u2502  \u251c\u2500jessibuca\n\u2502  \u251c\u2500presentation\n\u2502  \u2514\u2500qunee\n\u251c\u2500plugins\n\u251c\u2500router\n\u2502  \u2514\u2500modules\n\u251c\u2500store\n\u2502  \u2514\u2500modules\n\u2502      \u251c\u2500async-route\n\u2502      \u251c\u2500lockscreen\n\u2502      \u251c\u2500system\n\u2502      \u251c\u2500tabs-view\n\u2502      \u2514\u2500user\n\u251c\u2500styles\n\u251c\u2500types\n\u2502  \u2514\u2500shims\n\u251c\u2500utils\n\u2502  \u251c\u2500http\n\u2502  \u2502  \u2514\u2500axios\n\u2502  \u251c\u2500is\n\u2502  \u251c\u2500lnglatUtil\n\u2502  \u251c\u2500permission\n\u2502  \u2514\u2500ws-axios\n\u2514\u2500views\n    \u251c\u2500auth\n    \u2502  \u2514\u2500system\n    \u2502      \u251c\u2500access\n    \u2502      \u251c\u2500account\n    \u2502      \u2502  \u2514\u2500components\n    \u2502      \u251c\u2500android\n    \u2502      \u2502  \u2514\u2500components\n    \u2502      \u251c\u2500audio\n    \u2502      \u251c\u2500channel\n    \u2502      \u251c\u2500communication\n    \u2502      \u251c\u2500config\n    \u2502      \u2502  \u2514\u2500components\n    \u2502      \u251c\u2500conTest\n    \u2502      \u2502  \u2514\u2500components\n    \u2502      \u251c\u2500control\n    \u2502      \u2502  \u251c\u2500components\n    \u2502      \u2502  \u251c\u2500css\n    \u2502      \u2502  \u251c\u2500font\n    \u2502      \u2502  \u2514\u2500images\n    \u2502      \u251c\u2500device\n    \u2502      \u2502  \u2514\u2500components\n    \u2502      \u2502      \u251c\u2500meshDevice\n    \u2502      \u2502      \u2502  \u2514\u2500components\n    \u2502      \u2502      \u251c\u2500meshNarrowband\n    \u2502      \u2502      \u2514\u2500utils\n    \u2502      \u251c\u2500dict\n    \u2502      \u251c\u2500home\n    \u2502      \u251c\u2500im\n    \u2502      \u2502  \u2514\u2500components\n    \u2502      \u2502      \u251c\u2500addressBook\n    \u2502      \u2502      \u251c\u2500chatWindow\n    \u2502      \u2502      \u251c\u2500groupchatAvatar\n    \u2502      \u2502      \u251c\u2500im\n    \u2502      \u2502      \u251c\u2500initiateGroupChat\n    \u2502      \u2502      \u251c\u2500messages\n    \u2502      \u2502      \u251c\u2500search\n    \u2502      \u2502      \u251c\u2500setting\n    \u2502      \u2502      \u251c\u2500util\n    \u2502      \u2502      \u2514\u2500videoChat\n    \u2502      \u251c\u2500leafletMap\n    \u2502      \u2502  \u251c\u2500alarm\n    \u2502      \u2502  \u251c\u2500components\n    \u2502      \u2502  \u2514\u2500warningPoint\n    \u2502      \u251c\u2500live\n    \u2502      \u251c\u2500log\n    \u2502      \u251c\u2500media\n    \u2502      \u251c\u2500meeting\n    \u2502      \u2502  \u2514\u2500components\n    \u2502      \u251c\u2500northconfig\n    \u2502      \u251c\u2500onlineMap\n    \u2502      \u2502  \u2514\u2500components\n    \u2502      \u251c\u2500onmap\n    \u2502      \u251c\u2500operator\n    \u2502      \u251c\u2500parentplatform\n    \u2502      \u2502  \u2514\u2500components\n    \u2502      \u251c\u2500pushVideoList\n    \u2502      \u2502  \u2514\u2500components\n    \u2502      \u2502      \u2514\u2500utils\n    \u2502      \u251c\u2500record\n    \u2502      \u2502  \u2514\u2500recordPlan\n    \u2502      \u251c\u2500regional\n    \u2502      \u2502  \u2514\u2500components\n    \u2502      \u251c\u2500role\n    \u2502      \u2502  \u2514\u2500components\n    \u2502      \u251c\u2500rtc\n    \u2502      \u251c\u2500space\n    \u2502      \u251c\u2500streamProxy\n    \u2502      \u2502  \u2514\u2500components\n    \u2502      \u2502      \u2514\u2500utils\n    \u2502      \u251c\u2500student\n    \u2502      \u251c\u2500test\n    \u2502      \u251c\u2500toponeighbor\n    \u2502      \u251c\u2500toporouter\n    \u2502      \u251c\u2500triggers\n    \u2502      \u2514\u2500upgrade\n    \u2502          \u2514\u2500components\n    \u251c\u2500monitor\n    \u2514\u2500shared\n        \u251c\u2500dashboard\n        \u2502  \u2514\u2500welcome\n        \u251c\u2500demos\n        \u2502  \u251c\u2500form\n        \u2502  \u251c\u2500icons\n        \u2502  \u2514\u2500tables\n        \u251c\u2500error\n        \u251c\u2500icons\n        \u251c\u2500login\n        \u2514\u2500redirect\n"})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},87444:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/image-20250414170450371-35857e1f739ae0c869e960114a630bc3.png"},60473:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/image-20250414170603336-7c522a99b005d350a6010dee40b68d3a.png"},71201:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/image-20250414171515407-702939605c9a222792114a3ec53786d5.png"},34268:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/image-20250414171549612-a277133aa4f501c56316d84fa3bca5c2.png"},67179:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/image-20250414172234257-adec3d3df2b3e087cb59b06dc3f53260.png"},24041:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/image-20250414172442465-1a3fd7398c1ec105eefb44cbec9c6bc4.png"},99247:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/image-20250414172500978-1934b6b0fe658d6465299ce2d24862c0.png"},63408:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/image-20250414173514443-cbccbe10b61668934d7003f190b44598.png"},40942:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/image-20250414173737574-23433e5dc1cc95aa99a24267bb1e0b78.png"},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var t=r(96540);const a={},s=t.createContext(a);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);